{"dependencies":[{"kind":"library","name":"package:polymer/polymer.dart","id":"polymer","comment":"\nCustom HTML tags, data binding, and templates for building\nstructured, encapsulated, client-side web apps.\n\nPolymer.dart, the next evolution of Web UI,\nis an in-progress Dart port of the\n[Polymer project](http://www.polymer-project.org/).\nPolymer.dart compiles to JavaScript and runs across the modern web.\n\nTo use polymer.dart in your application,\nfirst add a\n[dependency](http://pub.dartlang.org/doc/dependencies.html)\nto the app's pubspec.yaml file.\nInstead of using the open-ended `any` version specifier,\nwe recommend using a range of version numbers, as in this example:\n\n    dependencies:\n      polymer: '>=0.7.1 <0.8'\n\nThen import the library into your application:\n\n    import 'package:polymer/polymer.dart';\n\n## Other resources\n\n* [Polymer.dart homepage](http://www.dartlang.org/polymer-dart/):\nExample code, project status, and\ninformation about how to get started using Polymer.dart in your apps.\n\n* [polymer.dart package](http://pub.dartlang.org/packages/polymer):\nMore details, such as the current major release number.\n\n* [Upgrading to Polymer.dart](http://www.dartlang.org/polymer-dart/upgrading-to-polymer-from-web-ui.html):\nTips for converting your apps from Web UI to Polymer.dart.\n","children":[{"superclass":{"name":"HtmlElement+Polymer+Observable","refId":"polymer/HtmlElement+Polymer+Observable"},"kind":"class","name":"PolymerElement","id":"PolymerElement","comment":"\nBase class for PolymerElements deriving from HtmlElement.\n\nSee [Polymer].\n","children":[{"kind":"constructor","name":"created","id":"created0()","line":"1087"}],"uri":"package:polymer/src/instance.dart","line":"1086"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"interfaces":[{"name":"NodeBindExtension","refId":"template_binding/NodeBindExtension"},{"name":"Observable","refId":"observe.src.observable/Observable"},{"name":"Element","refId":"dart.dom.html/Element"}],"kind":"class","name":"Polymer","id":"Polymer","comment":"\nThe mixin class for Polymer elements. It provides convenience features on top\nof the custom elements web standard.\n\nIf this class is used as a mixin,\nyou must call `polymerCreated()` from the body of your constructor.\n","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"register","id":"register2()","comment":"\nLike [document.register] but for Polymer elements.\n\nUse the [name] to specify custom elment's tag name, for example:\n\"fancy-button\" if the tag is used as `<fancy-button>`.\n\nThe [type] is the type to construct. If not supplied, it defaults to\n[PolymerElement].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Type","refId":"dart.core/Type"},"isOptional":true,"kind":"param","name":"type","id":"type"}],"line":"59"},{"returnType":{"name":"ShadowRoot","refId":"dart.dom.html/ShadowRoot"},"kind":"method","name":"getShadowRoot","id":"getShadowRoot1()","comment":"\nGets the shadow root associated with the corresponding custom element.\n\nThis is identical to [shadowRoot], unless there are multiple levels of\ninheritance and they each have their own shadow root. For example,\nthis can happen if the base class and subclass both have `<template>` tags\nin their `<polymer-element>` tags.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"customTagName","id":"customTagName"}],"line":"128"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"polymerCreated","id":"polymerCreated0()","comment":"\nIf this class is used as a mixin, this method must be called from inside\nof the `created()` constructor.\n\nIf this class is a superclass, calling `super.created()` is sufficient.\n","line":"136"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"prepareElement","id":"prepareElement0()","line":"149"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"ready","id":"ready0()","comment":"Called when [prepareElement] is finished. ","line":"172"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"enteredView","id":"enteredView0()","line":"174"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"leftView","id":"leftView0()","line":"181"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"parseDeclarations","id":"parseDeclarations1()","comment":"Recursive ancestral <element> initialization, oldest first. ","children":[{"ref":{"name":"PolymerDeclaration","refId":"polymer/PolymerDeclaration"},"kind":"param","name":"declaration","id":"declaration"}],"line":"186"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"parseDeclaration","id":"parseDeclaration1()","comment":"\nParse input `<polymer-element>` as needed, override for custom behavior.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"elementElement","id":"elementElement"}],"line":"196"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"method","name":"fetchTemplate","id":"fetchTemplate1()","comment":"\nReturn a shadow-root template (if desired), override for custom behavior.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"elementElement","id":"elementElement"}],"line":"219"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"lightFromTemplate","id":"lightFromTemplate1()","comment":"\nUtility function that stamps a `<template>` into light-dom.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"template","id":"template"}],"line":"225"},{"returnType":{"name":"ShadowRoot","refId":"dart.dom.html/ShadowRoot"},"kind":"method","name":"shadowFromTemplate","id":"shadowFromTemplate1()","comment":"\nUtility function that creates a shadow root from a `<template>`.\n\nThe base implementation will return a [ShadowRoot], but you can replace it\nwith your own code and skip ShadowRoot creation. In that case, you should\nreturn `null`.\n\nIn your overridden method, you can use [instanceTemplate] to stamp the\ntemplate and initialize data binding, and [shadowRootReady] to intialize\nother Polymer features like event handlers. It is fine to call\nshadowRootReady with a node something other than a ShadowRoot; for example,\nwith this Node.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"template","id":"template"}],"line":"253"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"shadowRootReady","id":"shadowRootReady2()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"root","id":"root"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"template","id":"template"}],"line":"280"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"marshalNodeReferences","id":"marshalNodeReferences1()","comment":"Locate nodes with id and store references to them in [$] hash. ","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"root","id":"root"}],"line":"289"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"attributeChanged","id":"attributeChanged3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"oldValue","id":"oldValue"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newValue","id":"newValue"}],"line":"296"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"MutationRecord","refId":"dart.dom.html/MutationRecord"}]}]},"kind":"method","name":"onMutation","id":"onMutation1()","comment":"\nReturns a future when `node` changes, or when its children or subtree\nchanges.\n\nUse [MutationObserver] if you want to listen to a stream of changes.\n","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"}],"line":"309"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"copyInstanceAttributes","id":"copyInstanceAttributes0()","line":"318"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"takeAttributes","id":"takeAttributes0()","line":"324"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"attributeToProperty","id":"attributeToProperty2()","comment":"\nIf attribute [name] is mapped to a property, deserialize\n[value] into that property.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"}],"line":"333"},{"returnType":{"name":"DeclarationMirror","refId":"dart.mirrors/DeclarationMirror"},"kind":"method","name":"propertyForAttribute","id":"propertyForAttribute1()","comment":"Return the published property matching name, or null. ","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"361"},{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"method","name":"deserializeValue","id":"deserializeValue3()","comment":"\nConvert representation of [value] based on [type] and [currentValue].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"currentValue","id":"currentValue"},{"ref":{"name":"TypeMirror","refId":"dart.mirrors/TypeMirror"},"kind":"param","name":"type","id":"type"}],"line":"374"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"serializeValue","id":"serializeValue1()","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"}],"line":"377"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"reflectPropertyToAttribute","id":"reflectPropertyToAttribute1()","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"name","id":"name"}],"line":"388"},{"returnType":{"name":"DocumentFragment","refId":"dart.dom.html/DocumentFragment"},"kind":"method","name":"instanceTemplate","id":"instanceTemplate1()","comment":"\nCreates the document fragment to use for each instance of the custom\nelement, given the `<template>` node. By default this is equivalent to:\n\n    templateBind(template).createInstance(this, polymerSyntax);\n\nWhere polymerSyntax is a singleton `PolymerExpressions` instance from the\n[polymer_expressions](https://pub.dartlang.org/packages/polymer_expressions)\npackage.\n\nYou can override this method to change the instantiation behavior of the\ntemplate, for example to use a different data-binding syntax.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"template","id":"template"}],"line":"421"},{"returnType":{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"},"kind":"method","name":"bind","id":"bind3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"kind":"param","name":"model","id":"model"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"path","id":"path"}],"line":"424"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unbind","id":"unbind1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"452"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"asyncUnbindAll","id":"asyncUnbindAll0()","line":"454"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unbindAll","id":"unbindAll0()","line":"460"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"cancelUnbindAll","id":"cancelUnbindAll1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"preventCascade","id":"preventCascade"}],"line":"474"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_unbindNodeTree","id":"_unbindNodeTree1()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"}],"isPrivate":true,"line":"496"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"_forNodeTree","id":"_forNodeTree2()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"callback","id":"callback","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node","uri":"package:polymer/src/instance.dart","line":"500"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/core/function.dart","line":"13"}]}],"isPrivate":true,"line":"500"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"observeProperties","id":"observeProperties0()","comment":"Set up property observers. ","line":"510"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"notifyPropertyChanges","id":"notifyPropertyChanges1()","comment":"Responds to property changes on this element. ","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"ChangeRecord","refId":"observe.src.change_record/ChangeRecord"}]},"kind":"param","name":"changes","id":"changes"}],"line":"532"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"observeArrayValue","id":"observeArrayValue3()","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"value","id":"value"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"old","id":"old"}],"line":"563"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"unbindProperty","id":"unbindProperty1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"593"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unbindAllProperties","id":"unbindAllProperties0()","line":"595"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"registerObserver","id":"registerObserver2()","comment":"Bookkeeping observers for memory management. ","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"param","name":"sub","id":"sub"}],"line":"604"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"unregisterObserver","id":"unregisterObserver1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"611"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unregisterObservers","id":"unregisterObservers0()","line":"618"},{"returnType":{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"},"kind":"method","name":"bindProperty","id":"bindProperty3()","comment":"\nBind a [property] in this object to a [path] in model. *Note* in Dart it\nis necessary to also define the field:\n\n    var myProperty;\n\n    ready() {\n      super.ready();\n      bindProperty(#myProperty, this, 'myModel.path.to.otherProp');\n    }\n","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"model","id":"model"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"path","id":"path"}],"line":"638"},{"returnType":{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"},"isStatic":true,"kind":"method","name":"_bindProperties","id":"_bindProperties4()","comment":"\nbind a property in A to a path in B by converting A[property] to a\ngetter/setter pair that accesses B[...path...]\n","children":[{"ref":{"name":"Polymer","refId":"polymer/Polymer"},"kind":"param","name":"inA","id":"inA"},{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"inProperty","id":"inProperty"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"inB","id":"inB","line":"647"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"inPath","id":"inPath","line":"647"}],"isPrivate":true,"line":"646"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addHostListeners","id":"addHostListeners0()","comment":"Attach event listeners on the host (this) element. ","line":"670"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addNodeListeners","id":"addNodeListeners3()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"events","id":"events"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"listener","id":"listener","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Event","refId":"dart.dom.html/Event"},"kind":"param","name":"e","id":"e","uri":"package:polymer/src/instance.dart","line":"681"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/core/function.dart","line":"13"}],"line":"681"}],"line":"680"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addNodeListener","id":"addNodeListener3()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"event","id":"event"},{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"listener","id":"listener","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","children":[{"ref":{"name":"Event","refId":"dart.dom.html/Event"},"kind":"param","name":"e","id":"e","uri":"package:polymer/src/instance.dart","line":"688"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/core/function.dart","line":"13"}]}],"line":"688"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"hostEventListener","id":"hostEventListener1()","children":[{"ref":{"name":"Event","refId":"dart.dom.html/Event"},"kind":"param","name":"event","id":"event"}],"line":"692"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"findEventDelegate","id":"findEventDelegate1()","children":[{"ref":{"name":"Event","refId":"dart.dom.html/Event"},"kind":"param","name":"event","id":"event"}],"line":"716"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"dispatchMethod","id":"dispatchMethod3()","comment":"\nCalls [methodOrCallback] with [args] if it is a closure, otherwise, treat\nit as a method name in [object], and invoke it.\n","children":[{"kind":"param","name":"object","id":"object"},{"kind":"param","name":"callbackOrMethod","id":"callbackOrMethod"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"args","id":"args"}],"line":"723"},{"returnType":{"name":"PrepareBindingFunction","refId":"template_binding.src.binding_delegate/PrepareBindingFunction"},"isStatic":true,"kind":"method","name":"prepareBinding","id":"prepareBinding4()","comment":"\nBind events via attributes of the form `on-eventName`. This method can be\nuse to hooks into the model syntax and adds event listeners as needed. By\ndefault, binding paths are always method names on the root model, the\ncustom element in which the node exists. Adding a '@' in the path directs\nthe event binding to use the model path as the event listener.  In both\ncases, the actual listener is attached to a generic method which evaluates\nthe bound path at event execution time.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"path","id":"path"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"kind":"param","name":"node","id":"node"},{"kind":"param","name":"originalPrepareBinding","id":"originalPrepareBinding","line":"751"}],"line":"750"},{"returnType":{"name":"Polymer","refId":"polymer/Polymer"},"isStatic":true,"kind":"method","name":"_findController","id":"_findController1()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"}],"isPrivate":true,"line":"790"},{"kind":"method","name":"invokeMethod","id":"invokeMethod2()","comment":"Call [methodName] method on this object with [args]. ","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"methodName","id":"methodName"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"args","id":"args"}],"line":"798"},{"isStatic":true,"kind":"method","name":"_invokeMethod","id":"_invokeMethod3()","comment":"Call [methodName] method on [receiver] with [args]. ","children":[{"kind":"param","name":"receiver","id":"receiver"},{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"methodName","id":"methodName"},{"ref":{"name":"List","refId":"dart.core/List"},"kind":"param","name":"args","id":"args"}],"isPrivate":true,"line":"802"},{"returnType":{"name":"MethodMirror","refId":"dart.mirrors/MethodMirror"},"isStatic":true,"kind":"method","name":"_findMethod","id":"_findMethod2()","children":[{"ref":{"name":"ClassMirror","refId":"dart.mirrors/ClassMirror"},"kind":"param","name":"type","id":"type"},{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"name","id":"name"}],"isPrivate":true,"line":"818"},{"returnType":{"name":"Timer","refId":"dart.async/Timer"},"kind":"method","name":"asyncTimer","id":"asyncTimer2()","comment":"\nInvokes a function asynchronously.\nThis will call `Platform.flush()` and then return a `new Timer`\nwith the provided [method] and [timeout].\n\nIf you would prefer to run the callback using\n[window.requestAnimationFrame], see the [async] method.\n","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"kind":"param","name":"method","id":"method","children":[{"returnType":{"name":"void","refId":"void"},"kind":"functiontype","name":"Function","id":"Function","uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/core/function.dart","line":"13"}]},{"ref":{"name":"Duration","refId":"dart.core/Duration"},"kind":"param","name":"timeout","id":"timeout"}],"line":"837"},{"returnType":{"name":"int","refId":"dart.core/int"},"kind":"method","name":"async","id":"async1()","comment":"\nInvokes a function asynchronously.\nThis will call `Platform.flush()` and then call\n[window.requestAnimationFrame] with the provided [method] and return the\nresult.\n\nIf you would prefer to run the callback after a given duration, see\nthe [asyncTimer] method.\n","children":[{"ref":{"name":"RequestAnimationFrameCallback","refId":"dart.dom.html/RequestAnimationFrameCallback"},"kind":"param","name":"method","id":"method"}],"line":"853"},{"returnType":{"name":"Object","refId":"dart.core/Object"},"kind":"method","name":"fire","id":"fire4()","comment":"\nFire a [CustomEvent] targeting [toNode], or this if toNode is not\nsupplied. Returns the [detail] object.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"type","id":"type"},{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"isNamed":true,"kind":"param","name":"detail","id":"detail"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isOptional":true,"isNamed":true,"kind":"param","name":"toNode","id":"toNode"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"canBubble","id":"canBubble"}],"line":"864"},{"kind":"method","name":"asyncFire","id":"asyncFire4()","comment":"\nFire an event asynchronously. See [async] and [fire].\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"type","id":"type"},{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"isNamed":true,"kind":"param","name":"detail","id":"detail"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isOptional":true,"isNamed":true,"kind":"param","name":"toNode","id":"toNode"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"isNamed":true,"kind":"param","name":"canBubble","id":"canBubble"}],"line":"878"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"classFollows","id":"classFollows3()","comment":"\nRemove [className] from [old], add class to [anew], if they exist.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"anew","id":"anew"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"old","id":"old"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"className","id":"className"}],"line":"888"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"installControllerStyles","id":"installControllerStyles0()","comment":"\nInstalls external stylesheets and <style> elements with the attribute\npolymer-scope='controller' into the scope of element. This is intended\nto be a called during custom element construction. Note, this incurs a\nper instance cost and should be used sparingly.\n\nThe need for this type of styling should go away when the shadowDOM spec\naddresses these issues:\n\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21391\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21390\nhttps://www.w3.org/Bugs/Public/show_bug.cgi?id=21389\n\n@param element The custom element instance into whose controller (parent)\nscope styles will be installed.\n@param elementElement The <element> containing controller styles.\n","line":"915"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"findStyleController","id":"findStyleController0()","line":"935"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"scopeHasElementStyle","id":"scopeHasElementStyle2()","children":[{"kind":"param","name":"scope","id":"scope"},{"kind":"param","name":"descriptor","id":"descriptor"}],"line":"948"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"applyStyleToScope","id":"applyStyleToScope2()","children":[{"ref":{"name":"StyleElement","refId":"dart.dom.html/StyleElement"},"kind":"param","name":"style","id":"style"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"scope","id":"scope"}],"line":"953"},{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"unveilElements","id":"unveilElements0()","comment":"Apply unveil class. ","line":"978"},{"ref":{"name":"Future","refId":"dart.async/Future"},"isStatic":true,"kind":"property","name":"onReady","id":"onReady","comment":"\nFuture indicating that the Polymer library has been loaded and is ready\nfor use.\n","line":"80"},{"ref":{"name":"PolymerDeclaration","refId":"polymer/PolymerDeclaration"},"kind":"property","name":"declaration","id":"declaration","comment":"The most derived `<polymer-element>` declaration for this element. ","line":"85"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"_elementPrepared","id":"_elementPrepared","isPrivate":true,"line":"93"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"applyAuthorStyles","id":"applyAuthorStyles","line":"95"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"resetStyleInheritance","id":"resetStyleInheritance","line":"96"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"alwaysPrepare","id":"alwaysPrepare","line":"97"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"preventDispose","id":"preventDispose","line":"98"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"_customTagName","id":"_customTagName","comment":"Retrieves the custom element name by inspecting the host node. ","isPrivate":true,"line":"144"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"}]},"kind":"property","name":"bindings","id":"bindings","line":"448"},{"ref":{"name":"TemplateInstance","refId":"template_binding/TemplateInstance"},"kind":"property","name":"templateInstance","id":"templateInstance","line":"449"},{"isStatic":true,"isFinal":true,"kind":"variable","name":"bindPattern","id":"bindPattern","comment":"Regular expression that matches data-bindings. ","line":"46"},{"ref":{"name":"BindingDelegate","refId":"template_binding.src.binding_delegate/BindingDelegate"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_polymerSyntax","id":"_polymerSyntax","comment":"The one syntax to rule them all.","isPrivate":true,"line":"69"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"_preparingElements","id":"_preparingElements","isPrivate":true,"line":"72"},{"ref":{"name":"Completer","refId":"dart.async/Completer"},"isStatic":true,"isFinal":true,"kind":"variable","name":"_ready","id":"_ready","isPrivate":true,"line":"74"},{"ref":{"name":"PolymerDeclaration","refId":"polymer/PolymerDeclaration"},"kind":"variable","name":"_declaration","id":"_declaration","isPrivate":true,"line":"82"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"}]},"kind":"variable","name":"_observers","id":"_observers","isPrivate":true,"line":"87"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"_unbound","id":"_unbound","isPrivate":true,"line":"88"},{"ref":{"name":"_Job","refId":"polymer/_Job"},"kind":"variable","name":"_unbindAllJob","id":"_unbindAllJob","isPrivate":true,"line":"89"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"kind":"variable","name":"_propertyObserver","id":"_propertyObserver","isPrivate":true,"line":"91"},{"ref":{"name":"BindingDelegate","refId":"template_binding.src.binding_delegate/BindingDelegate"},"kind":"variable","name":"syntax","id":"syntax","line":"100"},{"isFinal":true,"kind":"variable","name":"_shadowRoots","id":"_shadowRoots","comment":"\nShadow roots created by [parseElement]. See [getShadowRoot].\n","isPrivate":true,"line":"105"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Element","refId":"dart.dom.html/Element"}]},"isFinal":true,"kind":"variable","name":"$","id":"$","comment":"Map of items in the shadow root(s) by their [Element.id]. ","line":"116"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dart.dom.html/Element"}]},"isStatic":true,"kind":"variable","name":"veiledElements","id":"veiledElements","comment":"\nPrevents flash of unstyled content\nThis is the list of selectors for veiled elements\n","line":"975"}],"uri":"package:polymer/src/instance.dart","line":"31"}],"uri":"package:polymer/polymer.dart","line":"40"},{"kind":"library","name":"package:observe/src/observable.dart","id":"observe.src.observable","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Observable","id":"Observable","comment":"\nRepresents an object with observable properties. This is used by data in\nmodel-view architectures to notify interested parties of [changes] to the\nobject's properties (fields or getter/setter pairs).\n\nThe interface does not require any specific technique to implement\nobservability. You can implement it in the following ways:\n\n- extend or mixin this class, and let the application call [dirtyCheck]\n  periodically to check for changes to your object.\n- extend or mixin [ChangeNotifier], and implement change notifications\n  manually by calling [notifyPropertyChange] from your setters.\n- implement this interface and provide your own implementation.\n","children":[{"returnType":{"name":"void","refId":"void"},"isStatic":true,"kind":"method","name":"dirtyCheck","id":"dirtyCheck0()","comment":"\nPerforms dirty checking of objects that inherit from [Observable].\nThis scans all observed objects using mirrors and determines if any fields\nhave changed. If they have, it delivers the changes for the object.\n","line":"46"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_observed","id":"_observed0()","isPrivate":true,"line":"74"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_unobserved","id":"_unobserved0()","comment":"Release data associated with observation. ","isPrivate":true,"line":"108"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"deliverChanges","id":"deliverChanges0()","comment":"\nSynchronously deliver pending [changes]. Returns true if any records were\ndelivered, otherwise false.\n","line":"139"},{"kind":"method","name":"notifyPropertyChange","id":"notifyPropertyChange3()","comment":"\nNotify that the field [name] of this object has been changed.\n\nThe [oldValue] and [newValue] are also recorded. If the two values are\nequal, no change will be recorded.\n\nFor convenience this returns [newValue].\n","children":[{"ref":{"name":"Symbol","refId":"dart.core/Symbol"},"kind":"param","name":"field","id":"field"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"oldValue","id":"oldValue"},{"ref":{"name":"Object","refId":"dart.core/Object"},"kind":"param","name":"newValue","id":"newValue"}],"line":"170"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"notifyChange","id":"notifyChange1()","comment":"\nNotify observers of a change.\n\nFor most objects [Observable.notifyPropertyChange] is more convenient, but\ncollections sometimes deliver other types of changes such as a\n[ListChangeRecord].\n\nNotes:\n- This is *not* required for fields if you mixin or extend [Observable],\n  but you can use it for computed properties.\n- Unlike [ChangeNotifier] this will not schedule [deliverChanges]; use\n  [Observable.dirtyCheck] instead.\n","children":[{"ref":{"name":"ChangeRecord","refId":"observe.src.change_record/ChangeRecord"},"kind":"param","name":"record","id":"record"}],"line":"186"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"ChangeRecord","refId":"observe.src.change_record/ChangeRecord"}]}]},"kind":"property","name":"changes","id":"changes","comment":"\nThe stream of change records to this object. Records will be delivered\nasynchronously.\n\n[deliverChanges] can be called to force synchronous delivery.\n","line":"60"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"property","name":"hasObservers","id":"hasObservers","comment":"\nTrue if this object has any observers, and should call\n[notifyChange] for changes.\n","line":"72"},{"ref":{"name":"StreamController","refId":"dart.async/StreamController"},"kind":"variable","name":"_changes","id":"_changes","isPrivate":true,"line":"48"},{"ref":{"name":"InstanceMirror","refId":"dart.mirrors/InstanceMirror"},"kind":"variable","name":"_mirror","id":"_mirror","isPrivate":true,"line":"49"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"Symbol","refId":"dart.core/Symbol"},{"name":"Object","refId":"dart.core/Object"}]},"kind":"variable","name":"_values","id":"_values","isPrivate":true,"line":"51"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"ChangeRecord","refId":"observe.src.change_record/ChangeRecord"}]},"kind":"variable","name":"_records","id":"_records","isPrivate":true,"line":"52"}],"line":"40"}],"uri":"package:observe/src/observable.dart","line":"5"},{"kind":"library","name":"dart:core","id":"dart.core","comment":"\n\nBuilt-in types, collections,\nand other core functionality for every Dart program.\n\nThis library is automatically imported.\n\nSome classes in this library,\nsuch as [String] and [num],\nsupport Dart's built-in data types.\nOther classes, such as [List] and [Map], provide data structures\nfor managing collections of objects.\nAnd still other classes represent commonly used types of data\nsuch as URIs, dates and times, and errors.\n\n## Numbers and booleans\n\n[int] and [double] provide support for Dart's built-in numerical data types:\nintegers and double-precision floating point numbers, respectively.\nAn object of type [bool] is either true or false.\nVariables of these types can be constructed from literals:\n\n    int meaningOfLife = 42;\n    double valueOfPi  = 3.141592;\n    bool visible      = true;\n\n## Strings and regular expressions\n\nA [String] is immutable and represents a sequence of characters.\n\n    String shakespeareQuote = \"All the world's a stage, ...\";\n\n[StringBuffer] provides a way to construct strings efficiently.\n\n    StringBuffer moreShakespeare = new StringBuffer();\n    moreShakespeare.write('And all the men and women ');\n    moreShakespeare.write('merely players; ...');\n\nThe String and StringBuffer classes implement string concatenation,\ninterpolation, and other string manipulation features.\n\n    String philosophy = 'Live on ';\n    String get palindrome => philosophy + philosophy.split('').reversed.join();\n\n[RegExp] implements Dart regular expressions,\nwhich provide a grammar for matching patterns within text.\nFor example, here's a regular expression that matches\na string of one or more digits:\n\n    var numbers = new RegExp(r'\\d+');\n\nDart regular expressions have the same syntax and semantics as\nJavaScript regular expressions. See\n<http://ecma-international.org/ecma-262/5.1/#sec-15.10>\nfor the specification of JavaScript regular expressions.\n\n## Collections\n\nThe dart:core library provides basic collections,\nsuch as [List], [Map], and [Set].\n\nA List is an ordered collection of objects, with a length.\nLists are sometimes called arrays.\nUse a List when you need to access objects by index.\n\n    List superheroes = [ 'Batman', 'Superman', 'Harry Potter' ];\n\nA Set is an unordered collection of unique objects.\nYou cannot get an item by index (position).\nAdding a duplicate item has no effect.\n\n    Set villains = new Set();\n    villains.add('Joker');\n    villains.addAll( ['Lex Luther', 'Voldemort'] );\n\nA Map is an unordered collection of key-value pairs.\nMaps are sometimes called associative arrays because\nmaps associate a key to some value for easy retrieval.\nKeys are unique.\nUse a Map when you need to access objects\nby a unique identifier.\n\n    Map sidekicks = { 'Batman': 'Robin',\n                      'Superman': 'Lois Lane',\n                      'Harry Potter': 'Ron and Hermione' };\n\nIn addition to these classes,\ndart:core contains [Iterable],\nan interface that defines functionality\ncommon in collections of objects.\nExamples include the ability\nto run a function on each element in the collection,\nto apply a test to each element,\nto retrieve an object, and to determine length.\n\nIterable is implemented by List and Set,\nand used by Map for its keys and values.\n\nFor other kinds of collections, check out the\n[dart:collection](#dart-collection) library.\n\n## Date and time\n\nUse [DateTime] to represent a point in time\nand [Duration] to represent a span of time.\n\nYou can create DateTime objects with constructors\nor by parsing a correctly formatted string.\n\n    DateTime now = new DateTime.now();\n    DateTime berlinWallFell = new DateTime(1989, 11, 9);\n    DateTime moonLanding = DateTime.parse(\"1969-07-20\");\n\nCreate a Duration object specifying the individual time units.\n\n    Duration timeRemaining = new Duration(hours:56, minutes:14);\n\nIn addition to DateTime and Duration,\ndart:core contains the [Stopwatch] class for measuring elapsed time.\n\n## Uri\n\nA [Uri] object represents a uniform resource identifier,\nwhich identifies a resource on the web.\n\n    Uri dartlang = Uri.parse('http://dartlang.org/');\n\n## Errors\n\nThe [Error] class represents the occurrence of an error\nduring runtime.\nSubclasses of this class represent specific kinds of errors.\n\n## Other documentation\n\nFor more information about how to use the built-in types, refer to\n[Built-in Types](http://www.dartlang.org/docs/dart-up-and-running/contents/ch02.html#built-in-types)\nin Chapter 2 of\n[Dart: Up and Running](http://www.dartlang.org/docs/dart-up-and-running/).\n\nAlso, see\n[dart:core - Numbers, Collections, Strings, and More](http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-dartcore---strings-collections-and-more)\nfor more coverage of classes in this package.\n\nThe\n[Dart Language Specification](http://www.dartlang.org/docs/spec/)\nprovides technical details.\n","children":[{"kind":"class","name":"Object","id":"Object","comment":"\nThe base class for all Dart objects.\n\nBecause Object is the root of the Dart class hierarchy,\nevery other Dart class is a subclass of Object.\n\nWhen you define a class, you should override [toString]\nto return a string describing an instance of that class.\nYou might also need to define [hashCode] and [==], as described in the\n[Implementing map keys]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html#ch03-implementing-map-keys)\nsection of the [library tour]\n(http://www.dartlang.org/docs/dart-up-and-running/contents/ch03.html).\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nOverride this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:\n\n * Total: It must return a boolean for all arguments. It should never throw\n   or return `null`.\n\n * Reflexive: For all objects `o`, `o == o` must be true.\n\n * Symmetric: For all objects `o1` and `o2`, `o1 == o2` and `o2 == o1` must\n   either both be true, or both be false.\n\n * Transitive: For all objects `o1`, `o2`, and `o3`, if `o1 == o2` and\n   `o2 == o3` are true, then `o1 == o3` must be true.\n\nThe method should also be consistent over time, so equality of two objects\nshould not change over time, or at least only change if one of the objects\nwas modified.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","children":[{"kind":"param","name":"other","id":"other"}],"line":"59"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nReturns a string representation of this object.\n","line":"78"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","comment":"\n[noSuchMethod] is invoked when users invoke a non-existent method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[NoSuchMethodError].\n","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"90"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","line":"73"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","comment":"\nA representation of the runtime type of the object.\n","line":"95"},{"kind":"constructor","name":"","id":"0()","comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","line":"29"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/core/object.dart","line":"21"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/core/core.dart","line":"153"},{"kind":"library","name":"package:template_binding/template_binding.dart","id":"template_binding","comment":"\nThis library provides access to the Polymer project's\n[Data Binding](http://www.polymer-project.org/docs/polymer/databinding.html)\nFind more information at the\n[Polymer.dart homepage](https://www.dartlang.org/polymer-dart/).\n\nExtends the capabilities of the HTML Template Element by enabling it to\ncreate, manage, and remove instances of content bound to data defined in\nDart.\n\nNode.bind() is a new method added to all DOM nodes which instructs them to\nbind the named property to the data provided. These allows applications to\ncreate a data model in Dart or JavaScript that DOM reacts to.\n","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"kind":"class","name":"NodeBindExtension","id":"NodeBindExtension","comment":"Extensions to the [Node] API. ","children":[{"returnType":{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"},"kind":"method","name":"bind","id":"bind3()","comment":"\nBinds the attribute [name] to the [path] of the [model].\nPath is a String of accessors such as `foo.bar.baz`.\nReturns the `NodeBinding` instance.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"kind":"param","name":"model","id":"model"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"path","id":"path"}],"line":"19"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unbind","id":"unbind1()","comment":"Unbinds the attribute [name]. ","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"}],"line":"25"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"unbindAll","id":"unbindAll0()","comment":"Unbinds all bound attributes. ","line":"32"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"}]},"kind":"property","name":"bindings","id":"bindings","comment":"Gets the data bindings that are associated with this node. ","line":"42"},{"ref":{"name":"NodeBindExtension","refId":"template_binding/NodeBindExtension"},"kind":"property","name":"_self","id":"_self","comment":"\nDispatch support so custom HtmlElement's can override these methods.\nA public method like [this.bind] should not call another public method such\nas [this.unbind]. Instead it should dispatch through [_self.unbind].\n","isPrivate":true,"line":"52"},{"ref":{"name":"TemplateInstance","refId":"template_binding/TemplateInstance"},"kind":"property","name":"templateInstance","id":"templateInstance","comment":"Gets the template instance that instantiated this node, if any. ","line":"57"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isFinal":true,"kind":"variable","name":"_node","id":"_node","isPrivate":true,"line":"9"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"NodeBinding","refId":"template_binding.src.node_binding/NodeBinding"}]},"kind":"variable","name":"_bindings","id":"_bindings","isPrivate":true,"line":"10"},{"ref":{"name":"TemplateInstance","refId":"template_binding/TemplateInstance"},"kind":"variable","name":"_templateInstance","id":"_templateInstance","isPrivate":true,"line":"54"},{"kind":"constructor","name":"_","id":"_1()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"initializedField":{"name":"_node","refId":"template_binding/NodeBindExtension/_node"},"kind":"param","name":"_node","id":"_node","isPrivate":true}],"isPrivate":true,"line":"12"}],"uri":"package:template_binding/src/node.dart","line":"8"}],"uri":"package:template_binding/template_binding.dart","line":"19"},{"kind":"library","name":"dart:html","id":"dart.dom.html","comment":"\nHTML elements and other resources for web-based applications that need to\ninteract with the browser and the DOM (Document Object Model).\n\nThis library includes DOM element types, CSS styling, local storage,\nmedia, speech, events, and more.\nTo get started,\ncheck out the [Element] class, the base class for many of the HTML\nDOM types.\n\n## Other resources\n\n* If you've never written a web app before, try our\ntutorials&mdash;[A Game of Darts](http://dartlang.org/docs/tutorials).\n\n* To see some web-based Dart apps in action and to play with the code,\ndownload\n[Dart Editor](http://www.dartlang.org/#get-started)\nand run its built-in examples.\n\n* For even more examples, see\n[Dart HTML5 Samples](https://github.com/dart-lang/dart-html5-samples)\non Github.\n","children":[{"superclass":{"name":"Interceptor","refId":"_interceptors/Interceptor"},"isAbstract":true,"kind":"class","name":"ParentNode","id":"ParentNode","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"_childElementCount","id":"_childElementCount","isPrivate":true,"line":"20632"},{"ref":{"name":"HtmlCollection","refId":"dart.dom.html/HtmlCollection"},"kind":"variable","name":"_children","id":"_children","isPrivate":true,"line":"20634"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"variable","name":"_firstElementChild","id":"_firstElementChild","isPrivate":true,"line":"20636"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"variable","name":"_lastElementChild","id":"_lastElementChild","isPrivate":true,"line":"20638"},{"returnType":{"name":"ParentNode","refId":"dart.dom.html/ParentNode"},"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"20630"}],"line":"20625"},{"superclass":{"name":"EventTarget","refId":"dart.dom.html/EventTarget"},"kind":"class","name":"Node","id":"Node","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"nodes=","id":"nodes=1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"param","name":"value","id":"value"}],"line":"19488"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"remove","id":"remove0()","comment":"\nRemoves this node from the DOM.\n","line":"19501"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"replaceWith","id":"replaceWith1()","comment":"\nReplaces this node with another node.\n","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"otherNode","id":"otherNode","line":"19515"}],"line":"19514"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"insertAllBefore","id":"insertAllBefore2()","comment":"\nInserts all of the nodes into this node directly before refChild.\n\nSee also:\n\n* [insertBefore]\n","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"param","name":"newNodes","id":"newNodes"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"refChild","id":"refChild"}],"line":"19532"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nPrint out a String representation of this Node.\n","line":"19553"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"append","id":"append1()","comment":"\nAdds a node to the end of the child [nodes] list of this node.\n\nIf the node already exists in this document, it will be removed from its\ncurrent parent node, then added to this node.\n\nThis method is more efficient than `nodes.add`, and is the preferred\nway of appending a child node.\n","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"newChild","id":"newChild","line":"19819"}],"line":"19807"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"clone","id":"clone1()","comment":"\nReturns a copy of this node.\n\nIf [deep] is `true`, then all of this node's children and decendents are\ncopied as well. If [deep] is `false`, then only this node is copied.\n\n## Other resources\n\n* [Node.cloneNode]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.cloneNode) from\nMDN.\n","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"param","name":"deep","id":"deep","line":"19836"}],"line":"19821"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"contains","id":"contains1()","comment":"\nReturns true if this node contains the specified node.\n\n## Other resources\n\n* [Node.contains]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.contains) from MDN.\n","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"other","id":"other","line":"19848"}],"line":"19846"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"hasChildNodes","id":"hasChildNodes0()","comment":"\nReturns true if this node has any children.\n\n## Other resources\n\n* [Node.hasChildNodes]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.hasChildNodes) from\nMDN.\n","line":"19859"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"insertBefore","id":"insertBefore2()","comment":"\nInserts all of the nodes into this node directly before refChild.\n\n## Other resources\n\n* [Node.insertBefore]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.insertBefore) from\nMDN.\n","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"newChild","id":"newChild","line":"19874"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"refChild","id":"refChild","line":"19874"}],"line":"19872"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"_removeChild","id":"_removeChild1()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"oldChild","id":"oldChild","line":"19879"}],"isPrivate":true,"line":"19876"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"method","name":"_replaceChild","id":"_replaceChild2()","children":[{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"newChild","id":"newChild","line":"19884"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"oldChild","id":"oldChild","line":"19884"}],"isPrivate":true,"line":"19881"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"property","name":"nodes","id":"nodes","comment":"\nA modifiable list of this node's children.\n","line":"19484"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ATTRIBUTE_NODE","id":"ATTRIBUTE_NODE","line":"19559"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"CDATA_SECTION_NODE","id":"CDATA_SECTION_NODE","line":"19563"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"COMMENT_NODE","id":"COMMENT_NODE","line":"19567"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DOCUMENT_FRAGMENT_NODE","id":"DOCUMENT_FRAGMENT_NODE","line":"19571"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DOCUMENT_NODE","id":"DOCUMENT_NODE","line":"19575"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"DOCUMENT_TYPE_NODE","id":"DOCUMENT_TYPE_NODE","line":"19579"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ELEMENT_NODE","id":"ELEMENT_NODE","line":"19583"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ENTITY_NODE","id":"ENTITY_NODE","line":"19587"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"ENTITY_REFERENCE_NODE","id":"ENTITY_REFERENCE_NODE","line":"19591"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"NOTATION_NODE","id":"NOTATION_NODE","line":"19595"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"PROCESSING_INSTRUCTION_NODE","id":"PROCESSING_INSTRUCTION_NODE","line":"19599"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"kind":"variable","name":"TEXT_NODE","id":"TEXT_NODE","line":"19603"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_baseUri","id":"_baseUri","isPrivate":true,"line":"19608"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"isFinal":true,"kind":"variable","name":"childNodes","id":"childNodes","comment":"\nA list of this node's children.\n\n## Other resources\n\n* [Node.childNodes]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.childNodes)\nfrom MDN.\n","line":"19623"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isFinal":true,"kind":"variable","name":"firstChild","id":"firstChild","comment":"\nThe first child of this node.\n\n## Other resources\n\n* [Node.firstChild]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.firstChild)\nfrom MDN.\n","line":"19636"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isFinal":true,"kind":"variable","name":"lastChild","id":"lastChild","comment":"\nThe last child of this node.\n\n## Other resources\n\n* [Node.lastChild]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.lastChild)\nfrom MDN.\n","line":"19649"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_localName","id":"_localName","isPrivate":true,"line":"19654"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"_namespaceUri","id":"_namespaceUri","isPrivate":true,"line":"19659"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isFinal":true,"kind":"variable","name":"nextNode","id":"nextNode","comment":"\nThe next sibling node.\n\n## Other resources\n\n* [Node.nextSibling]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.nextSibling)\nfrom MDN.\n","line":"19673"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"nodeName","id":"nodeName","comment":"\nThe name of this node.\n\nThis varies by this node's [nodeType].\n\n## Other resources\n\n* [Node.nodeName]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeName)\nfrom MDN. This page contains a table of [nodeName] values for each\n[nodeType].\n","line":"19689"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"nodeType","id":"nodeType","comment":"\nThe type of node.\n\nThis value is one of:\n\n* [ATTRIBUTE_NODE] if this node is an attribute.\n* [CDATA_SECTION_NODE] if this node is a [CDataSection].\n* [COMMENT_NODE] if this node is a [Comment].\n* [DOCUMENT_FRAGMENT_NODE] if this node is a [DocumentFragment].\n* [DOCUMENT_NODE] if this node is a [Document].\n* [DOCUMENT_TYPE_NODE] if this node is a [DocumentType] node.\n* [ELEMENT_NODE] if this node is an [Element].\n* [ENTITY_NODE] if this node is an entity.\n* [ENTITY_REFERENCE_NODE] if this node is an entity reference.\n* [NOTATION_NODE] if this node is a notation.\n* [PROCESSING_INSTRUCTION_NODE] if this node is a [ProcessingInstruction].\n* [TEXT_NODE] if this node is a [Text] node.\n\n## Other resources\n\n* [Node.nodeType]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeType) from MDN.\n","line":"19716"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"nodeValue","id":"nodeValue","comment":"\nThe value of this node.\n\nThis varies by this type's [nodeType].\n\n## Other resources\n\n* [Node.nodeValue]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.nodeValue)\nfrom MDN. This page contains a table of [nodeValue] values for each\n[nodeType].\n","line":"19732"},{"ref":{"name":"Document","refId":"dart.dom.html/Document"},"isFinal":true,"kind":"variable","name":"ownerDocument","id":"ownerDocument","comment":"\nThe document this node belongs to.\n\nReturns null if this node does not belong to any document.\n\n## Other resources\n\n* [Node.ownerDocument]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.ownerDocument) from\nMDN.\n","line":"19747"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"isFinal":true,"kind":"variable","name":"parent","id":"parent","comment":"\nThe parent element of this node.\n\nReturns null if this node either does not have a parent or its parent is\nnot an element.\n\n## Other resources\n\n* [Node.parentElement]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.parentElement) from\nW3C.\n","line":"19764"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isFinal":true,"kind":"variable","name":"parentNode","id":"parentNode","comment":"\nThe parent node of this node.\n\n## Other resources\n\n* [Node.parentNode]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.parentNode) from\nMDN.\n","line":"19777"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"isFinal":true,"kind":"variable","name":"previousNode","id":"previousNode","comment":"\nThe previous sibling node.\n\n## Other resources\n\n* [Node.previousSibling]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.previousSibling)\nfrom MDN.\n","line":"19791"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"text","id":"text","comment":"\nAll text within this node and its decendents.\n\n## Other resources\n\n* [Node.textContent]\n(https://developer.mozilla.org/en-US/docs/Web/API/Node.textContent) from\nMDN.\n","line":"19805"},{"kind":"constructor","name":"_created","id":"_created0()","isPrivate":true,"line":"19479"},{"returnType":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"19555"}],"line":"19475"},{"superclass":{"name":"Interceptor","refId":"_interceptors/Interceptor"},"kind":"class","name":"EventTarget","id":"EventTarget","comment":"\nBase class for all browser objects that support events.\n\nUse the [on] property to add, and remove events\nfor compile-time type checks and a more concise API.\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"addEventListener","id":"addEventListener3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"type","id":"type","line":"12380"},{"ref":{"name":"EventListener","refId":"dart.dom.html/EventListener"},"kind":"param","name":"listener","id":"listener","line":"12380"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"useCapture","id":"useCapture","line":"12380"}],"line":"12378"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"dispatchEvent","id":"dispatchEvent1()","children":[{"ref":{"name":"Event","refId":"dart.dom.html/Event"},"kind":"param","name":"event","id":"event","line":"12384"}],"line":"12382"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"removeEventListener","id":"removeEventListener3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"type","id":"type","line":"12388"},{"ref":{"name":"EventListener","refId":"dart.dom.html/EventListener"},"kind":"param","name":"listener","id":"listener","line":"12388"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"useCapture","id":"useCapture","line":"12388"}],"line":"12386"},{"ref":{"name":"Events","refId":"dart.dom.html/Events"},"kind":"property","name":"on","id":"on","comment":"\nThis is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.\n","line":"12374"},{"kind":"constructor","name":"_created","id":"_created0()","isPrivate":true,"line":"12368"},{"returnType":{"name":"EventTarget","refId":"dart.dom.html/EventTarget"},"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"12376"}],"line":"12364"},{"superclass":{"name":"Node","refId":"dart.dom.html/Node"},"isAbstract":true,"interfaces":[{"name":"ChildNode","refId":"dart.dom.html/ChildNode"},{"name":"ParentNode","refId":"dart.dom.html/ParentNode"}],"kind":"class","name":"Element","id":"Element","comment":"\nAn abstract class, which all HTML elements extend.\n","children":[{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"attributes=","id":"attributes=1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"value","id":"value"}],"line":"9485"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"children=","id":"children=1()","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dart.dom.html/Element"}]},"kind":"param","name":"value","id":"value"}],"line":"9507"},{"returnType":{"name":"ElementList","refId":"dart.dom.html/ElementList"},"kind":"method","name":"querySelectorAll","id":"querySelectorAll1()","comment":"\nFinds all descendent elements of this element that match the specified\ngroup of selectors.\n\n[selectors] should be a string using CSS selector syntax.\n\n    var items = element.querySelectorAll('.itemClassName');\n\nFor details about CSS selector syntax, see the\n[CSS selector specification](http://www.w3.org/TR/css3-selectors/).\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors","line":"9527"}],"line":"9526"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"method","name":"query","id":"query1()","comment":"\nAlias for [querySelector]. Note this function is deprecated because its\nsemantics will be changing in the future.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"relativeSelectors","id":"relativeSelectors","line":"9537"}],"line":"9534"},{"returnType":{"name":"ElementList","refId":"dart.dom.html/ElementList"},"kind":"method","name":"queryAll","id":"queryAll1()","comment":"\nAlias for [querySelectorAll]. Note this function is deprecated because its\nsemantics will be changing in the future.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"relativeSelectors","id":"relativeSelectors","line":"9546"}],"line":"9543"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"classes=","id":"classes=1()","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"value","id":"value"}],"line":"9561"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"dataset=","id":"dataset=1()","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"param","name":"value","id":"value"}],"line":"9593"},{"returnType":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"method","name":"getNamespacedAttributes","id":"getNamespacedAttributes1()","comment":"\nGets a map for manipulating the attributes of a particular namespace.\n\nThis is primarily useful for SVG attributes such as xref:link.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"namespace","id":"namespace"}],"line":"9606"},{"returnType":{"name":"CssStyleDeclaration","refId":"dart.dom.html/CssStyleDeclaration"},"kind":"method","name":"getComputedStyle","id":"getComputedStyle1()","comment":"\nThe set of all CSS values applied to this element, including inherited\nand default values.\n\nThe computedStyle contains values that are inherited from other\nsources, such as parent elements or stylesheets. This differs from the\n[style] property, which contains only the values specified directly on this\nelement.\n\nPseudoElement can be values such as `::after`, `::before`, `::marker`,\n`::line-marker`.\n\nSee also:\n\n* [CSS Inheritance and Cascade](http://docs.webplatform.org/wiki/tutorials/inheritance_and_cascade)\n* [Pseudo-elements](http://docs.webplatform.org/wiki/css/selectors/pseudo-elements)\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"pseudoElement","id":"pseudoElement"}],"line":"9627"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"appendText","id":"appendText1()","comment":"\nAdds the specified text after the last child of this element.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"9650"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"appendHtml","id":"appendHtml1()","comment":"\nParses the specified text as HTML and adds the resulting node after the\nlast child of this element.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"9658"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"kind":"method","name":"isTagSupported","id":"isTagSupported1()","comment":"\nChecks to see if the tag name is supported by the current platform.\n\nThe tag should be a valid HTML tag name.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"tag","id":"tag"}],"line":"9667"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"enteredView","id":"enteredView0()","comment":"\nCalled by the DOM when this element has been inserted into the live\ndocument.\n","line":"9676"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"leftView","id":"leftView0()","comment":"\nCalled by the DOM when this element has been removed from the live\ndocument.\n","line":"9683"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"attributeChanged","id":"attributeChanged3()","comment":"\nCalled by the DOM whenever an attribute on this has been changed.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"oldValue","id":"oldValue"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"newValue","id":"newValue"}],"line":"9689"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"xtag=","id":"xtag=1()","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"value","id":"value"}],"line":"9712"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","comment":"\nThe string representation of this element.\n\nThis is equivalent to reading the [localName] property.\n","line":"9738"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scrollIntoView","id":"scrollIntoView1()","comment":"\nScrolls this element into view.\n\nOnly one of of the alignment options may be specified at a time.\n\nIf no options are specified then this will attempt to scroll the minimum\namount needed to bring the element into view.\n\nNote that alignCenter is currently only supported on WebKit platforms. If\nalignCenter is specified but not supported then this will fall back to\nalignTop.\n\nSee also:\n\n* [scrollIntoView](http://docs.webplatform.org/wiki/dom/methods/scrollIntoView)\n* [scrollIntoViewIfNeeded](http://docs.webplatform.org/wiki/dom/methods/scrollIntoViewIfNeeded)\n","children":[{"ref":{"name":"ScrollAlignment","refId":"dart.dom.html/ScrollAlignment"},"isOptional":true,"kind":"param","name":"alignment","id":"alignment"}],"line":"9757"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_determineMouseWheelEventType","id":"_determineMouseWheelEventType1()","children":[{"ref":{"name":"EventTarget","refId":"dart.dom.html/EventTarget"},"kind":"param","name":"e","id":"e"}],"isPrivate":true,"line":"9787"},{"returnType":{"name":"String","refId":"dart.core/String"},"isStatic":true,"kind":"method","name":"_determineTransitionEventType","id":"_determineTransitionEventType1()","children":[{"ref":{"name":"EventTarget","refId":"dart.dom.html/EventTarget"},"kind":"param","name":"e","id":"e"}],"isPrivate":true,"line":"9811"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAdjacentText","id":"insertAdjacentText2()","comment":"\nInserts text into the DOM at the specified location.\n\nTo see the possible values for [where], read the doc for\n[insertAdjacentHtml].\n\nSee also:\n\n* [insertAdjacentHtml]\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text"}],"line":"9830"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_insertAdjacentText","id":"_insertAdjacentText2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where","line":"9839"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text","line":"9839"}],"isPrivate":true,"line":"9838"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"insertAdjacentHtml","id":"insertAdjacentHtml2()","comment":"\nParses text as an HTML fragment and inserts it into the DOM at the\nspecified location.\n\nThe [where] parameter indicates where to insert the HTML fragment:\n\n* 'beforeBegin': Immediately before this element.\n* 'afterBegin': As the first child of this element.\n* 'beforeEnd': As the last child of this element.\n* 'afterEnd': Immediately after this element.\n\n    var html = '<div class=\"something\">content</div>';\n    // Inserts as the first child\n    document.body.insertAdjacentHtml('afterBegin', html);\n    var createdElement = document.body.children[0];\n    print(createdElement.classes[0]); // Prints 'something'\n\nSee also:\n\n* [insertAdjacentText]\n* [insertAdjacentElement]\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"}],"line":"9863"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_insertAdjacentHtml","id":"_insertAdjacentHtml2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where","line":"9872"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"text","id":"text","line":"9872"}],"isPrivate":true,"line":"9871"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"method","name":"insertAdjacentElement","id":"insertAdjacentElement2()","comment":"\nInserts [element] into the DOM at the specified location.\n\nTo see the possible values for [where], read the doc for\n[insertAdjacentHtml].\n\nSee also:\n\n* [insertAdjacentHtml]\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"element","id":"element"}],"line":"9884"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_insertAdjacentElement","id":"_insertAdjacentElement2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where","line":"9894"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"element","id":"element","line":"9894"}],"isPrivate":true,"line":"9893"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_insertAdjacentNode","id":"_insertAdjacentNode2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"where","id":"where"},{"ref":{"name":"Node","refId":"dart.dom.html/Node"},"kind":"param","name":"node","id":"node"}],"isPrivate":true,"line":"9896"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"matches","id":"matches1()","comment":"\nChecks if this element matches the CSS selectors.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors","line":"9920"}],"line":"9919"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"matchesWithAncestors","id":"matchesWithAncestors1()","comment":"Checks if this element or any of its parents match the CSS selectors. ","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors","line":"9938"}],"line":"9937"},{"returnType":{"name":"ShadowRoot","refId":"dart.dom.html/ShadowRoot"},"kind":"method","name":"createShadowRoot","id":"createShadowRoot0()","comment":"\nCreates a new shadow root for this shadow host.\n\n## Other resources\n\n* [Shadow DOM 101]\n(http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/)\nfrom HTML5Rocks.\n* [Shadow DOM specification]\n(http://www.w3.org/TR/shadow-dom/) from W3C.\n","line":"9958"},{"returnType":{"name":"Point","refId":"dart.math/Point"},"kind":"method","name":"offsetTo","id":"offsetTo1()","comment":"\nProvides the offset of this element's [borderEdge] relative to the\nspecified [parent].\n\nThis is the Dart equivalent of jQuery's\n[position](http://api.jquery.com/position/) method. Unlike jQuery's\nposition, however, [parent] can be any parent element of `this`,\nrather than only `this`'s immediate [offsetParent]. If the specified\nelement is _not_ an offset parent or transitive offset parent to this\nelement, an [ArgumentError] is thrown.\n","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"parent","id":"parent","line":"10080"}],"line":"10079"},{"returnType":{"name":"Point","refId":"dart.math/Point"},"isStatic":true,"kind":"method","name":"_offsetToHelper","id":"_offsetToHelper2()","children":[{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"current","id":"current"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"param","name":"parent","id":"parent"}],"isPrivate":true,"line":"10084"},{"returnType":{"name":"DocumentFragment","refId":"dart.dom.html/DocumentFragment"},"kind":"method","name":"createFragment","id":"createFragment3()","comment":"\nCreate a DocumentFragment from the HTML fragment and ensure that it follows\nthe sanitization rules specified by the validator or treeSanitizer.\n\nIf the default validation behavior is too restrictive then a new\nNodeValidator should be created, either extending or wrapping a default\nvalidator and overriding the validation APIs.\n\nThe treeSanitizer is used to walk the generated node tree and sanitize it.\nA custom treeSanitizer can also be provided to perform special validation\nrules but since the API is more complex to implement this is discouraged.\n\nThe returned tree is guaranteed to only contain nodes and attributes which\nare allowed by the provided validator.\n\nSee also:\n\n* [NodeValidator]\n* [NodeTreeSanitizer]\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"},{"ref":{"name":"NodeValidator","refId":"dart.dom.html/NodeValidator"},"isOptional":true,"isNamed":true,"kind":"param","name":"validator","id":"validator","line":"10126"},{"ref":{"name":"NodeTreeSanitizer","refId":"dart.dom.html/NodeTreeSanitizer"},"isOptional":true,"isNamed":true,"kind":"param","name":"treeSanitizer","id":"treeSanitizer","line":"10126"}],"line":"10125"},{"returnType":{"name":"void","refId":"void"},"isSetter":true,"kind":"method","name":"innerHtml=","id":"innerHtml=1()","comment":"\nParses the HTML fragment and sets it as the contents of this element.\n\nThis uses the default sanitization behavior to sanitize the HTML fragment,\nuse [setInnerHtml] to override the default behavior.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"}],"line":"10190"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setInnerHtml","id":"setInnerHtml3()","comment":"\nParses the HTML fragment and sets it as the contents of this element.\nThis ensures that the generated content follows the sanitization rules\nspecified by the validator or treeSanitizer.\n\nIf the default validation behavior is too restrictive then a new\nNodeValidator should be created, either extending or wrapping a default\nvalidator and overriding the validation APIs.\n\nThe treeSanitizer is used to walk the generated node tree and sanitize it.\nA custom treeSanitizer can also be provided to perform special validation\nrules but since the API is more complex to implement this is discouraged.\n\nThe resulting tree is guaranteed to only contain nodes and attributes which\nare allowed by the provided validator.\n\nSee also:\n\n* [NodeValidator]\n* [NodeTreeSanitizer]\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"},{"ref":{"name":"NodeValidator","refId":"dart.dom.html/NodeValidator"},"isOptional":true,"isNamed":true,"kind":"param","name":"validator","id":"validator","line":"10216"},{"ref":{"name":"NodeTreeSanitizer","refId":"dart.dom.html/NodeTreeSanitizer"},"isOptional":true,"isNamed":true,"kind":"param","name":"treeSanitizer","id":"treeSanitizer","line":"10216"}],"line":"10215"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"click","id":"click0()","line":"10917"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"blur","id":"blur0()","line":"11043"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"focus","id":"focus0()","line":"11047"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getAttribute","id":"getAttribute1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","line":"11054"}],"line":"11051"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"getAttributeNS","id":"getAttributeNS2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"namespaceURI","id":"namespaceURI","line":"11059"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"localName","id":"localName","line":"11059"}],"line":"11056"},{"returnType":{"name":"Rectangle","refId":"dart.math/Rectangle"},"kind":"method","name":"getBoundingClientRect","id":"getBoundingClientRect0()","comment":"\nReturns the smallest bounding rectangle that encompasses this element's\npadding, scrollbar, and border.\n\n## Other resources\n\n* [Element.getBoundingClientRect]\n(https://developer.mozilla.org/en-US/docs/Web/API/Element.getBoundingClientRect)\nfrom MDN.\n* [The getBoundingClientRect() method]\n(http://www.w3.org/TR/cssom-view/#the-getclientrects-and-getboundingclientrect-methods)\nfrom W3C.\n","line":"11074"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Rectangle","refId":"dart.math/Rectangle"}]},"kind":"method","name":"getClientRects","id":"getClientRects0()","comment":"\nReturns a list of bounding rectangles for each box associated with this\nelement.\n\n## Other resources\n\n* [Element.getClientRects]\n(https://developer.mozilla.org/en-US/docs/Web/API/Element.getClientRects)\nfrom MDN.\n* [The getClientRects() method]\n(http://www.w3.org/TR/cssom-view/#the-getclientrects-and-getboundingclientrect-methods)\nfrom W3C.\n","line":"11091"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"method","name":"getDestinationInsertionPoints","id":"getDestinationInsertionPoints0()","comment":"\nReturns a list of shadow DOM insertion points to which this element is\ndistributed.\n\n## Other resources\n\n* [Shadow DOM specification]\n(https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html)\nfrom W3C.\n","line":"11107"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"method","name":"getElementsByClassName","id":"getElementsByClassName1()","comment":"\nReturns a list of nodes with the given class name inside this element.\n\n## Other resources\n\n* [getElementsByClassName]\n(https://developer.mozilla.org/en-US/docs/Web/API/document.getElementsByClassName)\nfrom MDN.\n* [DOM specification]\n(http://www.w3.org/TR/domcore/) from W3C.\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","line":"11129"}],"line":"11125"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"method","name":"_getElementsByTagName","id":"_getElementsByTagName1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","line":"11136"}],"isPrivate":true,"line":"11131"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_hasAttribute","id":"_hasAttribute1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","line":"11141"}],"isPrivate":true,"line":"11138"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"kind":"method","name":"_hasAttributeNS","id":"_hasAttributeNS2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"namespaceURI","id":"namespaceURI","line":"11146"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"localName","id":"localName","line":"11146"}],"isPrivate":true,"line":"11143"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"method","name":"querySelector","id":"querySelector1()","comment":"\nFinds the first descendant element of this element that matches the\nspecified group of selectors.\n\n[selectors] should be a string using CSS selector syntax.\n\n    // Gets the first descendant with the class 'classname'\n    var element = element.querySelector('.className');\n    // Gets the element with id 'id'\n    var element = element.querySelector('#id');\n    // Gets the first descendant [ImageElement]\n    var img = element.querySelector('img');\n\nFor details about CSS selector syntax, see the\n[CSS selector specification](http://www.w3.org/TR/css3-selectors/).\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors","line":"11166"}],"line":"11164"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Node","refId":"dart.dom.html/Node"}]},"kind":"method","name":"_querySelectorAll","id":"_querySelectorAll1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"selectors","id":"selectors","line":"11173"}],"isPrivate":true,"line":"11168"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_removeAttribute","id":"_removeAttribute1()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","line":"11178"}],"isPrivate":true,"line":"11175"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_removeAttributeNS","id":"_removeAttributeNS2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"namespaceURI","id":"namespaceURI","line":"11183"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"localName","id":"localName","line":"11183"}],"isPrivate":true,"line":"11180"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scrollByLines","id":"scrollByLines1()","comment":"\nScrolls the element by a number of lines.\n\n## Other resources\n\n* [scrollByLines]\n(http://docs.webplatform.org/wiki/dom/methods/scrollByLines) from WebPlatform.org.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"lines","id":"lines","line":"11195"}],"line":"11193"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"scrollByPages","id":"scrollByPages1()","comment":"\nScrolls the element by a number of pages.\n\n## Other resources\n\n* [scrollByPages]\n(http://docs.webplatform.org/wiki/dom/methods/scrollByPages) from WebPlatform.org.\n","children":[{"ref":{"name":"int","refId":"dart.core/int"},"kind":"param","name":"pages","id":"pages","line":"11207"}],"line":"11205"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_scrollIntoView","id":"_scrollIntoView1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"alignWithTop","id":"alignWithTop","line":"11212"}],"isPrivate":true,"line":"11209"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"_scrollIntoViewIfNeeded","id":"_scrollIntoViewIfNeeded1()","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"isOptional":true,"kind":"param","name":"centerIfNeeded","id":"centerIfNeeded","line":"11219"}],"isPrivate":true,"line":"11214"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setAttribute","id":"setAttribute2()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"name","id":"name","line":"11223"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value","line":"11223"}],"line":"11221"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"setAttributeNS","id":"setAttributeNS3()","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"namespaceURI","id":"namespaceURI","line":"11227"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"qualifiedName","id":"qualifiedName","line":"11227"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"value","id":"value","line":"11227"}],"line":"11225"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Range","refId":"dart.dom.html/Range"}]},"kind":"method","name":"getRegionFlowRanges","id":"getRegionFlowRanges0()","comment":"\nReturns an array of ranges of fragments in the flow.\n\n## Other resources\n\n* [CSS regions and exclusions tutorial]\n(http://www.html5rocks.com/en/tutorials/regions/adobe/) from HTML5Rocks.\n* [Regions](http://html.adobe.com/webplatform/layout/regions/) from Adobe.\n* [CSS regions specification]\n(http://www.w3.org/TR/css3-regions/) from W3C.\n","line":"11229"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"requestFullscreen","id":"requestFullscreen0()","comment":"\nDisplays this element fullscreen.\n\n## Other resources\n\n* [Using the fullscreen API]\n(http://docs.webplatform.org/wiki/tutorials/using_the_full-screen_api)\ntutorial from WebPlatform.org.\n* [Fullscreen specification]\n(http://www.w3.org/TR/fullscreen/) from W3C.\n","line":"11251"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"requestPointerLock","id":"requestPointerLock0()","comment":"\nLocks the mouse pointer to this element.\n\n## Other resources\n\n* [Pointer lock and first person shooter controls]\n(http://www.html5rocks.com/en/tutorials/pointerlock/intro/) tutorial from\nHTML5Rocks.\n\n* [Pointer lock specification]\n(http://www.w3.org/TR/pointerlock/) from W3C.\n","line":"11271"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"attributes","id":"attributes","comment":"\nAll attributes on this element.\n\nAny modifications to the attribute map will automatically be applied to\nthis element.\n\nThis only includes attributes which are not in a namespace\n(such as 'xlink:href'), additional attributes can be accessed via\n[getNamespacedAttributes].\n","line":"9483"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"Element","refId":"dart.dom.html/Element"}]},"kind":"property","name":"children","id":"children","comment":"\nList of the direct children of this element.\n\nThis collection can be used to add and remove elements from the document.\n\n    var item = new DivElement();\n    item.text = 'Something';\n    document.body.children.add(item) // Item is now displayed on the page.\n    for (var element in document.body.children) {\n      element.style.background = 'red'; // Turns every child of body red.\n    }\n","line":"9505"},{"ref":{"name":"CssClassSet","refId":"dart.dom.html/CssClassSet"},"kind":"property","name":"classes","id":"classes","comment":"\nThe set of CSS classes applied to this element.\n\nThis set makes it easy to add, remove or toggle the classes applied to\nthis element.\n\n    element.classes.add('selected');\n    element.classes.toggle('isOnline');\n    element.classes.remove('selected');\n","line":"9559"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"String","refId":"dart.core/String"}]},"kind":"property","name":"dataset","id":"dataset","comment":"\nAllows access to all custom data attributes (data-*) set on this element.\n\nThe keys for the map must follow these rules:\n\n* The name must not begin with 'xml'.\n* The name cannot contain a semi-colon (';').\n* The name cannot contain any capital letters.\n\nAny keys from markup will be converted to camel-cased keys in the map.\n\nFor example, HTML specified as:\n\n    <div data-my-random-value='value'></div>\n\nWould be accessed in Dart as:\n\n    var value = element.dataset['myRandomValue'];\n\nSee also:\n\n* [Custom data attributes](http://www.w3.org/TR/html5/global-attributes.html#custom-data-attribute)\n","line":"9590"},{"ref":{"name":"Rectangle","refId":"dart.math/Rectangle"},"kind":"property","name":"client","id":"client","comment":"\nGets the position of this element relative to the client area of the page.\n","line":"9638"},{"ref":{"name":"Rectangle","refId":"dart.math/Rectangle"},"kind":"property","name":"offset","id":"offset","comment":"\nGets the offset of this element relative to its offsetParent.\n","line":"9644"},{"kind":"property","name":"xtag","id":"xtag","comment":"\nExperimental support for [web components][wc]. This field stores a\nreference to the component implementation. It was inspired by Mozilla's\n[x-tags][] project. Please note: in the future it may be possible to\n`extend Element` from your class, in which case this field will be\ndeprecated.\n\nIf xtag has not been set, it will simply return `this` [Element].\n\n[wc]: http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html\n[x-tags]: http://x-tags.org/\n","line":"9710"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"localName","id":"localName","line":"9716"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"namespaceUri","id":"namespaceUri","comment":"\nA URI that identifies the XML namespace of this element.\n\n`null` if no namespace URI is specified.\n\n## Other resources\n\n* [Node.namespaceURI]\n(http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSname) from W3C.\n","line":"9730"},{"ref":{"name":"ShadowRoot","refId":"dart.dom.html/ShadowRoot"},"kind":"property","name":"shadowRoot","id":"shadowRoot","comment":"\nThe shadow root of this shadow host.\n\n## Other resources\n\n* [Shadow DOM 101]\n(http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom/)\nfrom HTML5Rocks.\n* [Shadow DOM specification]\n(http://www.w3.org/TR/shadow-dom/) from W3C.\n","line":"9978"},{"ref":{"name":"CssRect","refId":"dart.dom.html/CssRect"},"kind":"property","name":"contentEdge","id":"contentEdge","comment":"\nAccess this element's content position.\n\nThis returns a rectangle with the dimenions actually available for content\nin this element, in pixels, regardless of this element's box-sizing\nproperty. Unlike [getBoundingClientRect], the dimensions of this rectangle\nwill return the same numerical height if the element is hidden or not.\n\n_Important_ _note_: use of this method _will_ perform CSS calculations that\ncan trigger a browser reflow. Therefore, use of this property _during_ an\nanimation frame is discouraged. See also:\n[Browser Reflow](https://developers.google.com/speed/articles/reflow)\n","line":"9997"},{"ref":{"name":"CssRect","refId":"dart.dom.html/CssRect"},"kind":"property","name":"paddingEdge","id":"paddingEdge","comment":"\nAccess the dimensions and position of this element's content + padding box.\n\nThis returns a rectangle with the dimenions actually available for content\nin this element, in pixels, regardless of this element's box-sizing\nproperty. Unlike [getBoundingClientRect], the dimensions of this rectangle\nwill return the same numerical height if the element is hidden or not. This\ncan be used to retrieve jQuery's\n[innerHeight](http://api.jquery.com/innerHeight/) value for an element.\nThis is also a rectangle equalling the dimensions of clientHeight and\nclientWidth.\n\n_Important_ _note_: use of this method _will_ perform CSS calculations that\ncan trigger a browser reflow. Therefore, use of this property _during_ an\nanimation frame is discouraged. See also:\n[Browser Reflow](https://developers.google.com/speed/articles/reflow)\n","line":"10017"},{"ref":{"name":"CssRect","refId":"dart.dom.html/CssRect"},"kind":"property","name":"borderEdge","id":"borderEdge","comment":"\nAccess the dimensions and position of this element's content + padding +\nborder box.\n\nThis returns a rectangle with the dimenions actually available for content\nin this element, in pixels, regardless of this element's box-sizing\nproperty. Unlike [getBoundingClientRect], the dimensions of this rectangle\nwill return the same numerical height if the element is hidden or not. This\ncan be used to retrieve jQuery's\n[outerHeight](http://api.jquery.com/outerHeight/) value for an element.\n\n_Important_ _note_: use of this method _will_ perform CSS calculations that\ncan trigger a browser reflow. Therefore, use of this property _during_ an\nanimation frame is discouraged. See also:\n[Browser Reflow](https://developers.google.com/speed/articles/reflow)\n","line":"10036"},{"ref":{"name":"CssRect","refId":"dart.dom.html/CssRect"},"kind":"property","name":"marginEdge","id":"marginEdge","comment":"\nAccess the dimensions and position of this element's content + padding +\nborder + margin box.\n\nThis returns a rectangle with the dimenions actually available for content\nin this element, in pixels, regardless of this element's box-sizing\nproperty. Unlike [getBoundingClientRect], the dimensions of this rectangle\nwill return the same numerical height if the element is hidden or not. This\ncan be used to retrieve jQuery's\n[outerHeight](http://api.jquery.com/outerHeight/) value for an element.\n\n_Important_ _note_: use of this method will perform CSS calculations that\ncan trigger a browser reflow. Therefore, use of this property _during_ an\nanimation frame is discouraged. See also:\n[Browser Reflow](https://developers.google.com/speed/articles/reflow)\n","line":"10055"},{"ref":{"name":"Point","refId":"dart.math/Point"},"kind":"property","name":"documentOffset","id":"documentOffset","comment":"\nProvides the coordinates of the element relative to the top of the\ndocument.\n\nThis method is the Dart equivalent to jQuery's\n[offset](http://api.jquery.com/offset/) method.\n","line":"10065"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"property","name":"innerHtml","id":"innerHtml","line":"10221"},{"ref":{"name":"ElementEvents","refId":"dart.dom.html/ElementEvents"},"kind":"property","name":"on","id":"on","comment":"\nThis is an ease-of-use accessor for event streams which should only be\nused when an explicit accessor is not available.\n","line":"10227"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onAbort","id":"onAbort","comment":"Stream of `abort` events handled by this [Element].","line":"11325"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onBeforeCopy","id":"onBeforeCopy","comment":"Stream of `beforecopy` events handled by this [Element].","line":"11330"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onBeforeCut","id":"onBeforeCut","comment":"Stream of `beforecut` events handled by this [Element].","line":"11335"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onBeforePaste","id":"onBeforePaste","comment":"Stream of `beforepaste` events handled by this [Element].","line":"11340"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onBlur","id":"onBlur","comment":"Stream of `blur` events handled by this [Element].","line":"11345"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onChange","id":"onChange","comment":"Stream of `change` events handled by this [Element].","line":"11350"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onClick","id":"onClick","comment":"Stream of `click` events handled by this [Element].","line":"11355"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onContextMenu","id":"onContextMenu","comment":"Stream of `contextmenu` events handled by this [Element].","line":"11360"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onCopy","id":"onCopy","comment":"Stream of `copy` events handled by this [Element].","line":"11365"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onCut","id":"onCut","comment":"Stream of `cut` events handled by this [Element].","line":"11370"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onDoubleClick","id":"onDoubleClick","comment":"Stream of `doubleclick` events handled by this [Element].","line":"11375"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDrag","id":"onDrag","comment":"\nA stream of `drag` events fired when this element currently being dragged.\n\nA `drag` event is added to this stream as soon as the drag begins.\nA `drag` event is also added to this stream at intervals while the drag\noperation is still ongoing.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11396"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDragEnd","id":"onDragEnd","comment":"\nA stream of `dragend` events fired when this element completes a drag\noperation.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11414"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDragEnter","id":"onDragEnter","comment":"\nA stream of `dragenter` events fired when a dragged object is first dragged\nover this element.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11432"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDragLeave","id":"onDragLeave","comment":"\nA stream of `dragleave` events fired when an object being dragged over this\nelement leaves this element's target area.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11450"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDragOver","id":"onDragOver","comment":"\nA stream of `dragover` events fired when a dragged object is currently\nbeing dragged over this element.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11468"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDragStart","id":"onDragStart","comment":"\nA stream of `dragstart` events fired when this element starts being\ndragged.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11486"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onDrop","id":"onDrop","comment":"\nA stream of `drop` events fired when a dragged object is dropped on this\nelement.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"11504"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onError","id":"onError","comment":"Stream of `error` events handled by this [Element].","line":"11509"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onFocus","id":"onFocus","comment":"Stream of `focus` events handled by this [Element].","line":"11514"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onInput","id":"onInput","comment":"Stream of `input` events handled by this [Element].","line":"11519"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onInvalid","id":"onInvalid","comment":"Stream of `invalid` events handled by this [Element].","line":"11524"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"KeyboardEvent","refId":"dart.dom.html/KeyboardEvent"}]},"kind":"property","name":"onKeyDown","id":"onKeyDown","comment":"Stream of `keydown` events handled by this [Element].","line":"11529"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"KeyboardEvent","refId":"dart.dom.html/KeyboardEvent"}]},"kind":"property","name":"onKeyPress","id":"onKeyPress","comment":"Stream of `keypress` events handled by this [Element].","line":"11534"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"KeyboardEvent","refId":"dart.dom.html/KeyboardEvent"}]},"kind":"property","name":"onKeyUp","id":"onKeyUp","comment":"Stream of `keyup` events handled by this [Element].","line":"11539"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onLoad","id":"onLoad","comment":"Stream of `load` events handled by this [Element].","line":"11544"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseDown","id":"onMouseDown","comment":"Stream of `mousedown` events handled by this [Element].","line":"11549"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseEnter","id":"onMouseEnter","comment":"Stream of `mouseenter` events handled by this [Element].","line":"11554"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseLeave","id":"onMouseLeave","comment":"Stream of `mouseleave` events handled by this [Element].","line":"11560"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseMove","id":"onMouseMove","comment":"Stream of `mousemove` events handled by this [Element].","line":"11566"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseOut","id":"onMouseOut","comment":"Stream of `mouseout` events handled by this [Element].","line":"11571"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseOver","id":"onMouseOver","comment":"Stream of `mouseover` events handled by this [Element].","line":"11576"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"kind":"property","name":"onMouseUp","id":"onMouseUp","comment":"Stream of `mouseup` events handled by this [Element].","line":"11581"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"WheelEvent","refId":"dart.dom.html/WheelEvent"}]},"kind":"property","name":"onMouseWheel","id":"onMouseWheel","comment":"Stream of `mousewheel` events handled by this [Element].","line":"11586"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onPaste","id":"onPaste","comment":"Stream of `paste` events handled by this [Element].","line":"11593"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onReset","id":"onReset","comment":"Stream of `reset` events handled by this [Element].","line":"11598"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onScroll","id":"onScroll","comment":"Stream of `scroll` events handled by this [Element].","line":"11603"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onSearch","id":"onSearch","comment":"Stream of `search` events handled by this [Element].","line":"11608"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onSelect","id":"onSelect","comment":"Stream of `select` events handled by this [Element].","line":"11615"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onSelectStart","id":"onSelectStart","comment":"Stream of `selectstart` events handled by this [Element].","line":"11620"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onSubmit","id":"onSubmit","comment":"Stream of `submit` events handled by this [Element].","line":"11626"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"kind":"property","name":"onTouchCancel","id":"onTouchCancel","comment":"Stream of `touchcancel` events handled by this [Element].","line":"11631"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"kind":"property","name":"onTouchEnd","id":"onTouchEnd","comment":"Stream of `touchend` events handled by this [Element].","line":"11638"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"kind":"property","name":"onTouchEnter","id":"onTouchEnter","comment":"Stream of `touchenter` events handled by this [Element].","line":"11645"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"kind":"property","name":"onTouchLeave","id":"onTouchLeave","comment":"Stream of `touchleave` events handled by this [Element].","line":"11652"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"kind":"property","name":"onTouchMove","id":"onTouchMove","comment":"Stream of `touchmove` events handled by this [Element].","line":"11659"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"kind":"property","name":"onTouchStart","id":"onTouchStart","comment":"Stream of `touchstart` events handled by this [Element].","line":"11666"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"TransitionEvent","refId":"dart.dom.html/TransitionEvent"}]},"kind":"property","name":"onTransitionEnd","id":"onTransitionEnd","comment":"Stream of `transitionend` events handled by this [Element].","line":"11673"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onFullscreenChange","id":"onFullscreenChange","comment":"Stream of `fullscreenchange` events handled by this [Element].","line":"11682"},{"ref":{"name":"ElementStream","refId":"dart.dom.html/ElementStream","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"kind":"property","name":"onFullscreenError","id":"onFullscreenError","comment":"Stream of `fullscreenerror` events handled by this [Element].","line":"11689"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"variable","name":"_xtag","id":"_xtag","isPrivate":true,"line":"9694"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"WheelEvent","refId":"dart.dom.html/WheelEvent"}]},"isStatic":true,"kind":"variable","name":"mouseWheelEvent","id":"mouseWheelEvent","comment":"\nStatic factory designed to expose `mousewheel` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"9783"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TransitionEvent","refId":"dart.dom.html/TransitionEvent"}]},"isStatic":true,"kind":"variable","name":"transitionEndEvent","id":"transitionEndEvent","comment":"\nStatic factory designed to expose `transitionend` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"9807"},{"ref":{"name":"HtmlDocument","refId":"dart.dom.html/HtmlDocument"},"isStatic":true,"kind":"variable","name":"_parseDocument","id":"_parseDocument","isPrivate":true,"line":"10100"},{"ref":{"name":"Range","refId":"dart.dom.html/Range"},"isStatic":true,"kind":"variable","name":"_parseRange","id":"_parseRange","isPrivate":true,"line":"10101"},{"ref":{"name":"NodeValidatorBuilder","refId":"dart.dom.html/NodeValidatorBuilder"},"isStatic":true,"kind":"variable","name":"_defaultValidator","id":"_defaultValidator","isPrivate":true,"line":"10102"},{"ref":{"name":"_ValidatingTreeSanitizer","refId":"dart.dom.html/_ValidatingTreeSanitizer"},"isStatic":true,"kind":"variable","name":"_defaultSanitizer","id":"_defaultSanitizer","isPrivate":true,"line":"10103"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"abortEvent","id":"abortEvent","comment":"\nStatic factory designed to expose `abort` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10240"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"beforeCopyEvent","id":"beforeCopyEvent","comment":"\nStatic factory designed to expose `beforecopy` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10250"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"beforeCutEvent","id":"beforeCutEvent","comment":"\nStatic factory designed to expose `beforecut` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10260"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"beforePasteEvent","id":"beforePasteEvent","comment":"\nStatic factory designed to expose `beforepaste` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10270"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"blurEvent","id":"blurEvent","comment":"\nStatic factory designed to expose `blur` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10280"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"changeEvent","id":"changeEvent","comment":"\nStatic factory designed to expose `change` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10290"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"clickEvent","id":"clickEvent","comment":"\nStatic factory designed to expose `click` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10300"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"contextMenuEvent","id":"contextMenuEvent","comment":"\nStatic factory designed to expose `contextmenu` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10310"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"copyEvent","id":"copyEvent","comment":"\nStatic factory designed to expose `copy` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10320"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"cutEvent","id":"cutEvent","comment":"\nStatic factory designed to expose `cut` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10330"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"doubleClickEvent","id":"doubleClickEvent","comment":"\nStatic factory designed to expose `doubleclick` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10340"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dragEvent","id":"dragEvent","comment":"\nA stream of `drag` events fired when an element is currently being dragged.\n\nA `drag` event is added to this stream as soon as the drag begins.\nA `drag` event is also added to this stream at intervals while the drag\noperation is still ongoing.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10361"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dragEndEvent","id":"dragEndEvent","comment":"\nA stream of `dragend` events fired when an element completes a drag\noperation.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10379"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dragEnterEvent","id":"dragEnterEvent","comment":"\nA stream of `dragenter` events fired when a dragged object is first dragged\nover an element.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10397"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dragLeaveEvent","id":"dragLeaveEvent","comment":"\nA stream of `dragleave` events fired when an object being dragged over an\nelement leaves the element's target area.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10415"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dragOverEvent","id":"dragOverEvent","comment":"\nA stream of `dragover` events fired when a dragged object is currently\nbeing dragged over an element.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10433"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dragStartEvent","id":"dragStartEvent","comment":"\nA stream of `dragstart` events for a dragged element whose drag has begun.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10450"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"dropEvent","id":"dropEvent","comment":"\nA stream of `drop` events fired when a dragged object is dropped on an\nelement.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10468"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"errorEvent","id":"errorEvent","comment":"\nStatic factory designed to expose `error` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10478"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"focusEvent","id":"focusEvent","comment":"\nStatic factory designed to expose `focus` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10488"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"inputEvent","id":"inputEvent","comment":"\nStatic factory designed to expose `input` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10498"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"invalidEvent","id":"invalidEvent","comment":"\nStatic factory designed to expose `invalid` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10508"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"KeyboardEvent","refId":"dart.dom.html/KeyboardEvent"}]},"isStatic":true,"kind":"variable","name":"keyDownEvent","id":"keyDownEvent","comment":"\nStatic factory designed to expose `keydown` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10518"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"KeyboardEvent","refId":"dart.dom.html/KeyboardEvent"}]},"isStatic":true,"kind":"variable","name":"keyPressEvent","id":"keyPressEvent","comment":"\nStatic factory designed to expose `keypress` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10528"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"KeyboardEvent","refId":"dart.dom.html/KeyboardEvent"}]},"isStatic":true,"kind":"variable","name":"keyUpEvent","id":"keyUpEvent","comment":"\nStatic factory designed to expose `keyup` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10538"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"loadEvent","id":"loadEvent","comment":"\nStatic factory designed to expose `load` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10548"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseDownEvent","id":"mouseDownEvent","comment":"\nStatic factory designed to expose `mousedown` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10558"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseEnterEvent","id":"mouseEnterEvent","comment":"\nStatic factory designed to expose `mouseenter` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10569"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseLeaveEvent","id":"mouseLeaveEvent","comment":"\nStatic factory designed to expose `mouseleave` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10580"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseMoveEvent","id":"mouseMoveEvent","comment":"\nStatic factory designed to expose `mousemove` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10590"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseOutEvent","id":"mouseOutEvent","comment":"\nStatic factory designed to expose `mouseout` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10600"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseOverEvent","id":"mouseOverEvent","comment":"\nStatic factory designed to expose `mouseover` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10610"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"MouseEvent","refId":"dart.dom.html/MouseEvent"}]},"isStatic":true,"kind":"variable","name":"mouseUpEvent","id":"mouseUpEvent","comment":"\nStatic factory designed to expose `mouseup` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10620"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"pasteEvent","id":"pasteEvent","comment":"\nStatic factory designed to expose `paste` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10630"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"resetEvent","id":"resetEvent","comment":"\nStatic factory designed to expose `reset` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10640"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"scrollEvent","id":"scrollEvent","comment":"\nStatic factory designed to expose `scroll` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10650"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"searchEvent","id":"searchEvent","comment":"\nStatic factory designed to expose `search` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10662"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"selectEvent","id":"selectEvent","comment":"\nStatic factory designed to expose `select` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10672"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"selectStartEvent","id":"selectStartEvent","comment":"\nStatic factory designed to expose `selectstart` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10683"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"submitEvent","id":"submitEvent","comment":"\nStatic factory designed to expose `submit` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10693"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"isStatic":true,"kind":"variable","name":"touchCancelEvent","id":"touchCancelEvent","comment":"\nStatic factory designed to expose `touchcancel` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10705"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"isStatic":true,"kind":"variable","name":"touchEndEvent","id":"touchEndEvent","comment":"\nStatic factory designed to expose `touchend` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10717"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"isStatic":true,"kind":"variable","name":"touchEnterEvent","id":"touchEnterEvent","comment":"\nStatic factory designed to expose `touchenter` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10729"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"isStatic":true,"kind":"variable","name":"touchLeaveEvent","id":"touchLeaveEvent","comment":"\nStatic factory designed to expose `touchleave` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10741"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"isStatic":true,"kind":"variable","name":"touchMoveEvent","id":"touchMoveEvent","comment":"\nStatic factory designed to expose `touchmove` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10753"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"TouchEvent","refId":"dart.dom.html/TouchEvent"}]},"isStatic":true,"kind":"variable","name":"touchStartEvent","id":"touchStartEvent","comment":"\nStatic factory designed to expose `touchstart` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10765"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"fullscreenChangeEvent","id":"fullscreenChangeEvent","comment":"\nStatic factory designed to expose `fullscreenchange` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10779"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"Event","refId":"dart.dom.html/Event"}]},"isStatic":true,"kind":"variable","name":"fullscreenErrorEvent","id":"fullscreenErrorEvent","comment":"\nStatic factory designed to expose `fullscreenerror` events to event\nhandlers that are not necessarily instances of [Element].\n\nSee [EventStreamProvider] for usage information.\n","line":"10793"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"contentEditable","id":"contentEditable","line":"10797"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"dir","id":"dir","line":"10801"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"draggable","id":"draggable","comment":"\nIndicates whether the element can be dragged and dropped.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10818"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"hidden","id":"hidden","comment":"\nIndicates whether the element is not relevant to the page's current state.\n\n## Other resources\n\n* [Hidden attribute specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#the-hidden-attribute)\nfrom WHATWG.\n","line":"10831"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"_innerHtml","id":"_innerHtml","isPrivate":true,"line":"10836"},{"ref":{"name":"InputMethodContext","refId":"dart.dom.html/InputMethodContext"},"isFinal":true,"kind":"variable","name":"inputMethodContext","id":"inputMethodContext","comment":"\nThe current state of IME composition.\n\n## Other resources\n\n* [Input method editor specification]\n(http://www.w3.org/TR/ime-api/) from W3C.\n","line":"10849"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isFinal":true,"kind":"variable","name":"isContentEditable","id":"isContentEditable","line":"10853"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"lang","id":"lang","line":"10857"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"outerHtml","id":"outerHtml","line":"10862"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"spellcheck","id":"spellcheck","line":"10868"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"tabIndex","id":"tabIndex","line":"10872"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"title","id":"title","line":"10876"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"translate","id":"translate","comment":"\nSpecifies whether this element's text content changes when the page is\nlocalized.\n\n## Other resources\n\n* [The translate attribute]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-translate-attribute)\nfrom WHATWG.\n","line":"10892"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"dropzone","id":"dropzone","comment":"\nA set of space-separated keywords that specify what kind of data this\nElement accepts on drop and what to do with that data.\n\n## Other resources\n\n* [Drag and drop sample]\n(https://github.com/dart-lang/dart-samples/tree/master/web/html5/dnd/basics)\nbased on [the tutorial](http://www.html5rocks.com/en/tutorials/dnd/basics/)\nfrom HTML5Rocks.\n* [Drag and drop specification]\n(http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd)\nfrom WHATWG.\n","line":"10915"},{"ref":{"name":"_NamedNodeMap","refId":"dart.dom.html/_NamedNodeMap"},"isFinal":true,"kind":"variable","name":"_attributes","id":"_attributes","isPrivate":true,"line":"10924"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"className","id":"className","line":"10928"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"clientHeight","id":"clientHeight","line":"10932"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"clientLeft","id":"clientLeft","line":"10936"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"clientTop","id":"clientTop","line":"10940"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"clientWidth","id":"clientWidth","line":"10944"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"id","id":"id","line":"10948"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"offsetHeight","id":"offsetHeight","line":"10958"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"offsetLeft","id":"offsetLeft","line":"10962"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"isFinal":true,"kind":"variable","name":"offsetParent","id":"offsetParent","line":"10966"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"offsetTop","id":"offsetTop","line":"10970"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"offsetWidth","id":"offsetWidth","line":"10974"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"pseudo","id":"pseudo","comment":"\nThe name of this element's custom pseudo-element.\n\nThis value must begin with an x and a hyphen, `x-`, to be considered valid.\n\n## Other resources\n\n* [Using custom pseudo elements]\n(http://www.html5rocks.com/en/tutorials/webcomponents/shadowdom-201/#toc-custom-pseduo)\nfrom HTML5Rocks.\n* [Custom pseudo-elements]\n(http://www.w3.org/TR/shadow-dom/#custom-pseudo-elements) from W3C.\n","line":"10992"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"scrollHeight","id":"scrollHeight","line":"10996"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"scrollLeft","id":"scrollLeft","line":"11000"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"variable","name":"scrollTop","id":"scrollTop","line":"11004"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"scrollWidth","id":"scrollWidth","line":"11008"},{"ref":{"name":"CssStyleDeclaration","refId":"dart.dom.html/CssStyleDeclaration"},"isFinal":true,"kind":"variable","name":"style","id":"style","line":"11012"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"tagName","id":"tagName","line":"11016"},{"ref":{"name":"String","refId":"dart.core/String"},"isFinal":true,"kind":"variable","name":"regionOverset","id":"regionOverset","comment":"\nThe current state of this region.\n\nIf `\"empty\"`, then there is no content in this region.\nIf `\"fit\"`, then content fits into this region, and more content can be\nadded. If `\"overset\"`, then there is more content than can be fit into this\nregion.\n\n## Other resources\n\n* [CSS regions and exclusions tutorial]\n(http://www.html5rocks.com/en/tutorials/regions/adobe/) from HTML5Rocks.\n* [Regions](http://html.adobe.com/webplatform/layout/regions/) from Adobe.\n* [CSS regions specification]\n(http://www.w3.org/TR/css3-regions/) from W3C.\n","line":"11041"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"isFinal":true,"kind":"variable","name":"nextElementSibling","id":"nextElementSibling","line":"11296"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"isFinal":true,"kind":"variable","name":"previousElementSibling","id":"previousElementSibling","line":"11300"},{"ref":{"name":"int","refId":"dart.core/int"},"isFinal":true,"kind":"variable","name":"_childElementCount","id":"_childElementCount","isPrivate":true,"line":"11307"},{"ref":{"name":"HtmlCollection","refId":"dart.dom.html/HtmlCollection"},"isFinal":true,"kind":"variable","name":"_children","id":"_children","isPrivate":true,"line":"11312"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"isFinal":true,"kind":"variable","name":"_firstElementChild","id":"_firstElementChild","isPrivate":true,"line":"11317"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"isFinal":true,"kind":"variable","name":"_lastElementChild","id":"_lastElementChild","isPrivate":true,"line":"11322"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"html","id":"html3()","comment":"\nCreates an HTML element from a valid fragment of HTML.\n\n    var element = new Element.html('<div class=\"foo\">content</div>');\n\nThe HTML fragment should contain only one single root element, any\nleading or trailing text nodes will be removed.\n\nThe HTML fragment is parsed as if it occurred within the context of a\n`<body>` tag, this means that special elements such as `<caption>` which\nmust be parsed within the scope of a `<table>` element will be dropped. Use\n[createFragment] to parse contextual HTML fragments.\n\nUnless a validator is provided this will perform the default validation\nand remove all scriptable elements and attributes.\n\nSee also:\n\n* [NodeValidator]\n\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"html","id":"html"},{"ref":{"name":"NodeValidator","refId":"dart.dom.html/NodeValidator"},"isOptional":true,"isNamed":true,"kind":"param","name":"validator","id":"validator","line":"9277"},{"ref":{"name":"NodeTreeSanitizer","refId":"dart.dom.html/NodeTreeSanitizer"},"isOptional":true,"isNamed":true,"kind":"param","name":"treeSanitizer","id":"treeSanitizer","line":"9277"}],"line":"9276"},{"kind":"constructor","name":"created","id":"created0()","comment":"\nCustom element creation constructor.\n\nThis constructor is used by the DOM when a custom element has been\ncreated. It can only be invoked by subclasses of Element from\nthat classes created constructor.\n\n    class CustomElement extends Element {\n      factory CustomElement() => new Element.tag('x-custom');\n\n      CustomElement.created() : super.created() {\n         // Perform any element initialization.\n      }\n    }\n    document.register('x-custom', CustomElement);\n","line":"9300"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"tag","id":"tag2()","comment":"\nCreates the HTML element specified by the tag name.\n\nThis is similar to [Document.createElement].\n[tag] should be a valid HTML tag name. If [tag] is an unknown tag then\nthis will create an [UnknownElement].\n\n    var divElement = new Element.tag('div');\n    print(divElement is DivElement); // 'true'\n    var myElement = new Element.tag('unknownTag');\n    print(myElement is UnknownElement); // 'true'\n\nFor standard elements it is more preferable to use the type constructors:\n    var element = new DivElement();\n\nSee also:\n\n* [isTagSupported]\n","children":[{"ref":{"name":"String","refId":"dart.core/String"},"kind":"param","name":"tag","id":"tag"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"kind":"param","name":"typeExtention","id":"typeExtention"}],"line":"9325"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"a","id":"a0()","comment":"Creates a new `<a>` element.\n\nThis is identical to calling `new Element.tag('a')`.","line":"9331"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"article","id":"article0()","comment":"Creates a new `<article>` element.\n\nThis is identical to calling `new Element.tag('article')`.","line":"9336"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"aside","id":"aside0()","comment":"Creates a new `<aside>` element.\n\nThis is identical to calling `new Element.tag('aside')`.","line":"9341"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"audio","id":"audio0()","comment":"Creates a new `<audio>` element.\n\nThis is identical to calling `new Element.tag('audio')`.","line":"9346"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"br","id":"br0()","comment":"Creates a new `<br>` element.\n\nThis is identical to calling `new Element.tag('br')`.","line":"9351"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"canvas","id":"canvas0()","comment":"Creates a new `<canvas>` element.\n\nThis is identical to calling `new Element.tag('canvas')`.","line":"9356"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"div","id":"div0()","comment":"Creates a new `<div>` element.\n\nThis is identical to calling `new Element.tag('div')`.","line":"9361"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"footer","id":"footer0()","comment":"Creates a new `<footer>` element.\n\nThis is identical to calling `new Element.tag('footer')`.","line":"9366"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"header","id":"header0()","comment":"Creates a new `<header>` element.\n\nThis is identical to calling `new Element.tag('header')`.","line":"9371"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"hr","id":"hr0()","comment":"Creates a new `<hr>` element.\n\nThis is identical to calling `new Element.tag('hr')`.","line":"9376"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"iframe","id":"iframe0()","comment":"Creates a new `<iframe>` element.\n\nThis is identical to calling `new Element.tag('iframe')`.","line":"9381"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"img","id":"img0()","comment":"Creates a new `<img>` element.\n\nThis is identical to calling `new Element.tag('img')`.","line":"9386"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"li","id":"li0()","comment":"Creates a new `<li>` element.\n\nThis is identical to calling `new Element.tag('li')`.","line":"9391"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"nav","id":"nav0()","comment":"Creates a new `<nav>` element.\n\nThis is identical to calling `new Element.tag('nav')`.","line":"9396"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"ol","id":"ol0()","comment":"Creates a new `<ol>` element.\n\nThis is identical to calling `new Element.tag('ol')`.","line":"9401"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"option","id":"option0()","comment":"Creates a new `<option>` element.\n\nThis is identical to calling `new Element.tag('option')`.","line":"9406"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"p","id":"p0()","comment":"Creates a new `<p>` element.\n\nThis is identical to calling `new Element.tag('p')`.","line":"9411"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"pre","id":"pre0()","comment":"Creates a new `<pre>` element.\n\nThis is identical to calling `new Element.tag('pre')`.","line":"9416"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"section","id":"section0()","comment":"Creates a new `<section>` element.\n\nThis is identical to calling `new Element.tag('section')`.","line":"9421"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"select","id":"select0()","comment":"Creates a new `<select>` element.\n\nThis is identical to calling `new Element.tag('select')`.","line":"9426"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"span","id":"span0()","comment":"Creates a new `<span>` element.\n\nThis is identical to calling `new Element.tag('span')`.","line":"9431"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"svg","id":"svg0()","comment":"Creates a new `<svg>` element.\n\nThis is identical to calling `new Element.tag('svg')`.","line":"9436"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"table","id":"table0()","comment":"Creates a new `<table>` element.\n\nThis is identical to calling `new Element.tag('table')`.","line":"9441"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"td","id":"td0()","comment":"Creates a new `<td>` element.\n\nThis is identical to calling `new Element.tag('td')`.","line":"9446"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"textarea","id":"textarea0()","comment":"Creates a new `<textarea>` element.\n\nThis is identical to calling `new Element.tag('textarea')`.","line":"9451"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"th","id":"th0()","comment":"Creates a new `<th>` element.\n\nThis is identical to calling `new Element.tag('th')`.","line":"9456"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"tr","id":"tr0()","comment":"Creates a new `<tr>` element.\n\nThis is identical to calling `new Element.tag('tr')`.","line":"9461"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"ul","id":"ul0()","comment":"Creates a new `<ul>` element.\n\nThis is identical to calling `new Element.tag('ul')`.","line":"9466"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"video","id":"video0()","comment":"Creates a new `<video>` element.\n\nThis is identical to calling `new Element.tag('video')`.","line":"9471"},{"returnType":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"10230"}],"line":"9248"},{"superclass":{"name":"Interceptor","refId":"_interceptors/Interceptor"},"isAbstract":true,"kind":"class","name":"ChildNode","id":"ChildNode","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"remove","id":"remove0()","line":"2066"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"variable","name":"nextElementSibling","id":"nextElementSibling","line":"2062"},{"ref":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"variable","name":"previousElementSibling","id":"previousElementSibling","line":"2064"},{"returnType":{"name":"ChildNode","refId":"dart.dom.html/ChildNode"},"kind":"constructor","name":"_","id":"_0()","isPrivate":true,"line":"2060"}],"line":"2055"},{"superclass":{"name":"Element","refId":"dart.dom.html/Element"},"kind":"class","name":"HtmlElement","id":"HtmlElement","children":[{"returnType":{"name":"HtmlElement","refId":"dart.dom.html/HtmlElement"},"kind":"constructor","name":"","id":"0()","line":"91"},{"kind":"constructor","name":"created","id":"created0()","comment":"\nConstructor instantiated by the DOM when a custom element has been created.\n\nThis can only be called by subclasses from their created constructor.\n","line":"98"}],"line":"90"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/html/dart2js/html_dart2js.dart","line":"25"},{"kind":"library","name":"dart:_interceptors","id":"_interceptors","children":[{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"kind":"class","name":"Interceptor","id":"Interceptor","comment":"\nThe base interceptor class.\n\nThe code `r.foo(a)` is compiled to `getInterceptor(r).foo$1(r, a)`.  The\nvalue returned by [getInterceptor] holds the methods separately from the\nstate of the instance.  The compiler converts the methods on an interceptor\nto take the Dart `this` argument as an explicit `receiver` argument.  The\nJavaScript `this` parameter is bound to the interceptor.\n\nIn order to have uniform call sites, if a method is defined on an\ninterceptor, methods of that name on plain unintercepted classes also use the\ninterceptor calling convention.  The plain classes are _self-interceptors_,\nand for them, `getInterceptor(r)` returns `r`.  Methods on plain\nunintercepted classes have a redundant `receiver` argument and should ignore\nit in favour of `this`.\n\nIn the case of mixins, a method may be placed on both an intercepted class\nand an unintercepted class.  In this case, the method must use the `receiver`\nparameter.\n\n\nThere are various optimizations of the general call pattern.\n\nWhen the interceptor can be statically determined, it can be used directly:\n\n    CONSTANT_INTERCEPTOR.foo$1(r, a)\n\nIf there are only a few classes, [getInterceptor] can be specialized with a\nmore efficient dispatch:\n\n    getInterceptor$specialized(r).foo$1(r, a)\n\nIf it can be determined that the receiver is an unintercepted class, it can\nbe called directly:\n\n    r.foo$1(r, a)\n\nIf, further, it is known that the call site cannot call a foo that is\nmixed-in to a native class, then it is known that the explicit receiver is\nignored, and space-saving dummy value can be passed instead:\n\n    r.foo$1(0, a)\n\nThis class defines implementations of *all* methods on [Object] so no\ninterceptor inherits an implementation from [Object].  This enables the\nimplementations on Object to ignore the explicit receiver argument, which\nallows dummy receiver optimization.\n","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"isOperator":true,"kind":"method","name":"==","id":"==1()","children":[{"kind":"param","name":"other","id":"other"}],"line":"273"},{"returnType":{"name":"String","refId":"dart.core/String"},"kind":"method","name":"toString","id":"toString0()","line":"277"},{"kind":"method","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"name":"Invocation","refId":"dart.core/Invocation"},"kind":"param","name":"invocation","id":"invocation"}],"line":"279"},{"ref":{"name":"int","refId":"dart.core/int"},"kind":"property","name":"hashCode","id":"hashCode","line":"275"},{"ref":{"name":"Type","refId":"dart.core/Type"},"kind":"property","name":"runtimeType","id":"runtimeType","line":"287"},{"kind":"constructor","name":"","id":"0()","line":"271"}],"line":"270"}],"uri":"file:///home/zoechi/source/3rdparty/google/darteditor/dart-sdk/lib/_internal/lib/interceptors.dart","line":"5"}],"kind":"library","name":"package:polymer_elements/polymer_media_query/polymer_media_query.dart","id":"polymer_elements.polymer_media_query","children":[{"superclass":{"name":"PolymerElement","refId":"polymer/PolymerElement"},"kind":"class","name":"PolymerMediaQuery","id":"PolymerMediaQuery","comment":"\npolymer-media-query can be used to data bind to a CSS media query.\nThe \"query\" property is a bare CSS media query.\nThe \"queryMatches\" property will be a boolean representing if the page matches that media query.\n\npolymer-media-query uses media query listeners to dynamically update the \"queryMatches\" property.\nA \"polymer-mediachange\" event also fires when queryMatches changes.\n\nExample:\n\n     <polymer-media-query query=\"max-width: 640px\" queryMatches=\"{{phoneScreen}}\"></polymer-media-query>\n","children":[{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"enteredView","id":"enteredView0()","line":"55"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"mqueryChanged","id":"mqueryChanged1()","children":[{"kind":"param","name":"oldValue","id":"oldValue"}],"line":"62"},{"returnType":{"name":"void","refId":"void"},"kind":"method","name":"queryHandler","id":"queryHandler1()","children":[{"kind":"param","name":"mq","id":"mq"}],"line":"88"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"CustomEvent","refId":"dart.dom.html/CustomEvent"}]},"kind":"property","name":"onPolymerMediachange","id":"onPolymerMediachange","comment":"\nFires a custom event (polymer-mediachange) when the query matches.\n","line":"49"},{"isFinal":true,"kind":"variable","name":"_logger","id":"_logger","isPrivate":true,"line":"31"},{"ref":{"name":"bool","refId":"dart.core/bool"},"kind":"variable","name":"queryMatches","id":"queryMatches","comment":"\nThe Boolean return value of the media query\n","line":"36"},{"ref":{"name":"String","refId":"dart.core/String"},"kind":"variable","name":"mquery","id":"mquery","comment":"\nThe CSS media query to evaulate\n","line":"41"},{"ref":{"name":"EventStreamProvider","refId":"dart.dom.html/EventStreamProvider","arguments":[{"name":"CustomEvent","refId":"dart.dom.html/CustomEvent"}]},"isStatic":true,"kind":"variable","name":"_polymerMediachange","id":"_polymerMediachange","isPrivate":true,"line":"43"},{"kind":"variable","name":"_mqHandler","id":"_mqHandler","isPrivate":true,"line":"52"},{"kind":"variable","name":"_mq","id":"_mq","isPrivate":true,"line":"53"},{"kind":"constructor","name":"created","id":"created0()","line":"29"}],"line":"27"}],"uri":"package:polymer_elements/polymer_media_query/polymer_media_query.dart","line":"7"}